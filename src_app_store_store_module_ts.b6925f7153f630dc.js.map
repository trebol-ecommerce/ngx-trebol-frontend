{"version":3,"mappings":"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","names":["AuthenticationService","constructor","loginApiService","guestApiService","registerApiService","sessionService","this","Subject","authCancelationSource","asObservable","cancelAuthentication","next","guestLogin","personDetails","userHasActiveSession$","pipe","take","switchMap","hasActiveSession","of","tap","token","saveToken","concat","validateSession","register","userDetails","login","name","password","credentials","o","i0","API_INJECTION_TOKENS","factory","StoreCartService","BehaviorSubject","cartDetailsSource","checkoutRequestSource","calculateItemCount","calculateNetValue","reset","addProductToCart","product","index","findSellDetailsIndexByProductBarcode","barcode","value","units","push","increaseProductUnits","decreaseProductUnits","matchingDetail","removeProductFromCart","splice","updateCheckoutRequest","info","findIndex","d","r","_a","cartDetails$","map","array","length","detail","reduce","a","b","p","price","StoreGuestLoginFormDialogComponent","authenticationService","dialog","cartService","submittingSource","person","formGroup","get","ngOnInit","FormGroup","FormControl","Validators","ngOnDestroy","t","actionSubscription","unsubscribe","complete","onSubmit","valid","takeUntil","authCancelation$","customer","close","err","throwError","subscribe","onCancel","selectors","$localize","ctx","StoreGuestPromptDialogOptions","StoreGuestPromptDialogComponent","onClickOption","n","c","emailControl","confirmControl","pristine","match","StoreRegistrationFormDialogComponent","profileService","formBuilder","snackBarService","entityFormGroupService","registeringSource","group","pass1","pass2","validators","passwordMatcher","details","profile","successMessage","open","COMMON_DISMISS_BUTTON_LABEL","catchError","errorMessage","getUserProfile","StoreLoginFormDialogComponent","loggingInSource","username","togglePasswordIcon$","hidePasswordSource","hide","passwordInputType$","registerButton","sourceDialogRef","targetDialogComponent","targetDialogConfig","width","showPassword","hidePassword","status","COMMON_ERROR_MESSAGE","StoreCartReviewGuard","appService","dialogService","router","canActivate","route","state","isCartNotEmpty","requireAuthentication","isAllowed","navigateByUrl","exitUrl","isLoggedIn","promptGuestUserChoices","choice","followGuestUserChoice","skip","afterClosed","promptLoginForm","promptRegistrationForm","promptGuestShippingForm","height","StoreCatalogService","productListApiService","productsApiService","ReplaySubject","listsPageSource","loadingSource","reloadItems","fetchPage","listIndex","page","finalize","navigateToProductDetails","productBarcode","from","navigate","relativeTo","queryParams","viewingProduct","queryParamsHandling","fetchProductDetails","fetchExisting","CdkStepHeader","_elementRef","focus","nativeElement","ɵfac","ɵdir","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","InjectionToken","CdkStep","_stepper","stepperOptions","interacted","interactedStream","EventEmitter","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","coerceBooleanProperty","optional","completed","_getDefaultCompleted","stepControl","hasError","_getDefaultError","invalid","select","selected","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","showError","forwardRef","CdkStepper","ɵcmp","TemplateRef","ngContentSelectors","encapsulation","_dir","_changeDetectorRef","_document","_destroyed","steps","QueryList","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","linear","selectedIndex","newIndex","coerceNumberProperty","_steps","_isValidIndex","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","undefined","step","indexOf","orientation","_keyManager","withVerticalOrientation","ngAfterContentInit","changes","startWith","filter","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","sort","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","FocusKeyManager","withWrap","withHomeAndEnd","change","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","Math","max","destroy","min","previous","forEach","_getStepLabelId","i","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","hasModifierKey","keyCode","manager","SPACE","ENTER","onKeydown","preventDefault","slice","some","control","pending","stepperElement","focusedElement","_getFocusedElementPierceShadowDom","contains","i1","DOCUMENT","CdkStepperModule","ɵmod","ɵinj","BidiModule","e","_animationDone","MatStepLabel","MatStepperIntl","optionalLabel","completedLabel","editableLabel","ɵprov","MAT_STEPPER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","parentIntl","_MatStepHeaderBase","mixinColor","elementRef","super","MatStepHeader","_intl","_focusMonitor","changeDetectorRef","_intlSubscription","monitor","stopMonitoring","origin","options","focusVia","_stringLabel","label","_templateLabel","_getHostElement","_getIconContext","active","_getDefaultTextForState","i2","decls","directives","i3","i5","styles","matStepperAnimations","horizontalStepTransition","trigger","style","transform","visibility","transition","animate","verticalStepTransition","MatStepperIcon","templateRef","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","_isSelected","Subscription","isSelected","_lazyContent","_portal","TemplatePortal","isErrorState","form","MatStepper","ErrorStateMatcher","useExisting","i2$1","_MatProxyStepperBase","features","MatHorizontalStepper","MatVerticalStepper","dir","animationDone","labelPosition","_iconOverrides","nodeName","toLowerCase","_icons","distinctUntilChanged","x","y","fromState","toState","_stepIsNavigable","i3$1","hostVars","changeDetection","MatStepperModule","imports","MatCommonModule","CommonModule","PortalModule","MatButtonModule","MatIconModule","MatRippleModule","MATERIAL_MODULES","StoreMaterialModule","ctx_r3","StoreBillingDetailsFormComponent","BILLING_TYPE_NAMES_MAP","onChange","v","onTouched","onValidatorChange","typeName","company","address","disabled","valueChangesSub","valueChanges","typeNameChangesSub","updateControlsAfterTypeNameChange","_b","writeValue","obj","emitEvent","isJavaScriptObject","patchValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disable","enable","validate","errors","billingType","billingCompany","billingAddress","registerOnValidatorChange","BILLING_TYPE_COMPANY","NG_VALUE_ACCESSOR","multi","NG_VALIDATORS","StoreShippingDetailsFormComponent","included","includeShippingChangesSub","updateControlsAfterShippingInclusionChange","shippingIncluded","shippingAddress","StoreCheckoutRequestFormComponent","billing","shipping","checkoutRequest$","checkoutRequestData","onlySelf","onRequest","COMMON_VALIDATION_ERROR_MESSAGE","request","StoreCheckoutService","checkoutApiService","requestTransaction","data","cartDetails","sell","createCheckoutRequest","submitCart","target","l","StoreCheckoutRequestInformationCardComponent","StoreCheckoutConfirmationButtonComponent","StoreCheckoutButtonComponent","ExternalPaymentRedirectionData","checkoutDetails","innerCheckoutDetails","_r0","StoreCheckoutConfirmationComponent","checkoutService","checkoutButtonPressSub","confirmed","onClickConfirm","getCartData","cart","loading","ctx_r7","StoreCartReviewComponent","cartNetValue$","cartContents$","onIncreaseProductQuantityAtIndex","onDecreaseProductQuantityAtIndex","onRemoveProductAtIndex","onConfirmation","inputEditable","StoreProductDetailsDialogComponent","NaN","productUnitsInCart$","merge","selfChangeTrigger","Number","isNaN","matchingCartIndex","cartDetailsSub","onClickIncreaseProductQuantity","onClickDecreaseProductQuantity","MAT_DIALOG_DATA","ctx_r8","oxw","ctx_r10","ctx_r11","ProductsLotDisplayComponent","onAddProductToCart","onViewProduct","viewProduct","onPage","StoreProductListContentsDisplayComponent","catalogService","ProductList","pageSource","products$","page$","items","totalCount$","totalCount","loadingSubscription","pageIndex","pageSize","loadingProducts","fetchContents","list","StoreLocationComponent","StoreCatalogComponent","environment","loading$","lists$","listsPage$","dataLoadingSubscription","queryParamsSubscription","queryParamMap","params","checkViewingProductParam","detailsViewSub","_c","has","promptProductDetails","EMPTY","properties","Error","source","props","currentProp","plucker","StoreReceiptService","receiptApiService","receiptSource","receipt$","pluck","fetchReceipt","fetchTransactionReceiptByToken","StoreReceiptDetailsTableComponent","MatTableDataSource","dataSource","StoreReceiptCardComponent","transactionStatus","receipt","SELL_STATUS_LOCALIZED_MAP","StoreReceiptComponent","service","loadReceipt","loadSubscription","StoreSearchService","ProductSearchQuery","currentPageSource","isLoadingSearchSource","updateSearchQuery","nameLike","searchQuery","categoryCode","paginate","reload","sortBy","order","ignoreElements","ctx_r6","ctx_r9","StoreSearchComponent","searchService","isLoadingSearch$","searchResults$","currentPage$","queryParamsSub","reloadSub","StoreHeaderNavigationComponent","cartHasItems$","cartItemCount$","ctx_r1","StoreHeaderSearchFormComponent","productSearchChanges","debounceTime","searchFiltersDebounceMs","categoryPickerSubscription","firstChild","routeConfig","path","onClickOpenCategoryPicker","ProductCategoryPickerDialogComponent","code","setValue","markAsDirty","onClickResetForm","StoreHeaderMenuComponent","sharedDialogService","userName$","watchUserName","canNavigateManagement$","authorizedAccess$","access","routes","logoutSubscription","onClickEditProfile","EditProfileFormDialogComponent","onClickLogout","confirmLogout","didConfirm","closeCurrentSession","message","requestConfirmation","title","StoreHeaderLoginButtonComponent","onClickLogIn","StoreHeaderComponent","isLoggedIn$","StoreFooterComponent","StoreComponent","restrictingConditionsSub","watchRestrictingConditions","restrictingCondition","routerState","snapshot","url","restrictedUrl","STORE_CHILD_ROUTES","component","StoreRoutingModule","RouterModule","children","pathMatch","redirectTo","SNACKBAR_DEFAULTS","duration","StoreModule","MAT_SNACK_BAR_DEFAULT_OPTIONS","useValue","SharedModule"],"sources":["./src/app/authentication.service.ts","./src/app/store/store-cart.service.ts","./src/app/store/dialogs/guest-login-form/store-guest-login-form-dialog.component.ts","./src/app/store/dialogs/guest-login-form/store-guest-login-form-dialog.component.html","./src/app/store/dialogs/guest-prompt/StoreGuestPromptDialogOptions.ts","./src/app/store/dialogs/guest-prompt/store-guest-prompt-dialog.component.ts","./src/app/store/dialogs/guest-prompt/store-guest-prompt-dialog.component.html","./src/functions/passwordMatcher.ts","./src/app/store/dialogs/registration-form/store-registration-form-dialog.component.html","./src/app/store/dialogs/registration-form/store-registration-form-dialog.component.ts","./src/app/store/dialogs/login-form/store-login-form-dialog.component.html","./src/app/store/dialogs/login-form/store-login-form-dialog.component.ts","./src/app/store/routes/cart-review/store-cart-review.guard.ts","./src/app/store/routes/catalog/store-catalog.service.ts","./node_modules/@angular/cdk/fesm2015/stepper.mjs","./node_modules/@angular/material/fesm2015/stepper.mjs","./src/app/store/store-material.module.ts","./src/app/store/forms/billing-details/store-billing-details-form.component.html","./src/app/store/forms/billing-details/store-billing-details-form.component.ts","./src/app/store/forms/shipping-details/store-shipping-details-form.component.html","./src/app/store/forms/shipping-details/store-shipping-details-form.component.ts","./src/app/store/forms/checkout-request/store-checkout-request-form.component.ts","./src/app/store/forms/checkout-request/store-checkout-request-form.component.html","./src/app/store/store-checkout.service.ts","./src/app/store/components/checkout-request-information-card/store-checkout-request-information-card.component.html","./src/app/store/components/checkout-request-information-card/store-checkout-request-information-card.component.ts","./src/app/store/components/checkout-confirmation-button/store-checkout-confirmation-button.component.ts","./src/app/store/components/checkout-confirmation-button/store-checkout-confirmation-button.component.html","./src/models/ExternalPaymentRedirectionData.ts","./src/app/store/components/checkout-button/store-checkout-button.component.ts","./src/app/store/components/checkout-button/store-checkout-button.component.html","./src/app/store/components/checkout-confirmation/store-checkout-confirmation.component.ts","./src/app/store/components/checkout-confirmation/store-checkout-confirmation.component.html","./src/app/store/routes/cart-review/store-cart-review.component.html","./src/app/store/routes/cart-review/store-cart-review.component.ts","./src/app/store/dialogs/product-details/store-product-details-dialog.component.ts","./src/app/store/dialogs/product-details/store-product-details-dialog.component.html","./src/models/entities/ProductList.ts","./src/app/store/components/products-display/store-products-lot-display.component.html","./src/app/store/components/products-display/store-products-lot-display.component.ts","./src/app/store/components/product-list-contents-display/store-product-list-contents-display.component.ts","./src/app/store/components/product-list-contents-display/store-product-list-contents-display.component.html","./src/app/store/components/location/store-location.component.ts","./src/app/store/components/location/store-location.component.html","./src/app/store/routes/catalog/store-catalog.component.html","./src/app/store/routes/catalog/store-catalog.component.ts","./node_modules/rxjs/_esm2015/internal/operators/pluck.js","./src/app/store/routes/receipt/store-receipt.service.ts","./src/app/store/components/receipt-details-table/store-receipt-details-table.component.html","./src/app/store/components/receipt-details-table/store-receipt-details-table.component.ts","./src/app/store/components/receipt-card/store-receipt-card.component.html","./src/app/store/components/receipt-card/store-receipt-card.component.ts","./src/app/store/routes/receipt/store-receipt.component.html","./src/app/store/routes/receipt/store-receipt.component.ts","./src/models/ProductSearchQuery.ts","./src/app/store/store-search.service.ts","./src/app/store/routes/search/store-search.component.html","./src/app/store/routes/search/store-search.component.ts","./src/app/store/components/header/navigation/store-header-navigation.component.html","./src/app/store/components/header/navigation/store-header-navigation.component.ts","./src/app/store/components/header/search-form/store-header-search-form.component.html","./src/app/store/components/header/search-form/store-header-search-form.component.ts","./src/app/store/components/header/menu/store-header-menu.component.html","./src/app/store/components/header/menu/store-header-menu.component.ts","./src/app/store/components/header/login-button/store-header-login-button.component.ts","./src/app/store/components/header/login-button/store-header-login-button.component.html","./src/app/store/components/header/store-header.component.html","./src/app/store/components/header/store-header.component.ts","./src/app/store/components/footer/store-footer.component.html","./src/app/store/components/footer/store-footer.component.ts","./src/app/store/store.component.html","./src/app/store/store.component.ts","./src/app/store/store-routing.module.ts","./src/app/store/store.module.ts"],"sourcesContent":["/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { concat, of, Subject } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport { API_INJECTION_TOKENS } from 'src/app/api/api-injection-tokens';\r\nimport { ILoginPublicApiService } from 'src/app/api/login-public-api.iservice';\r\nimport { Person } from 'src/models/entities/Person';\r\nimport { Login } from 'src/models/Login';\r\nimport { Registration } from '../models/Registration';\r\nimport { IGuestPublicApiService } from './api/guest-public-api.iservice';\r\nimport { IRegisterPublicApiService } from './api/register-public-api.iservice';\r\nimport { SessionService } from './session.service';\r\n\r\n/**\r\n * Exposes methods to authenticate the user against the external API, and a simple call to stop any ongoing authentication\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n\r\n  private authCancelationSource = new Subject<void>();\r\n\r\n  authCancelation$ = this.authCancelationSource.asObservable();\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.login) private loginApiService: ILoginPublicApiService,\r\n    @Inject(API_INJECTION_TOKENS.guest) private guestApiService: IGuestPublicApiService,\r\n    @Inject(API_INJECTION_TOKENS.register) private registerApiService: IRegisterPublicApiService,\r\n    private sessionService: SessionService\r\n  ) { }\r\n\r\n  cancelAuthentication(): void {\r\n    this.authCancelationSource.next();\r\n  }\r\n\r\n  guestLogin(personDetails: Person) {\r\n    return this.sessionService.userHasActiveSession$.pipe(\r\n      take(1),\r\n      switchMap(hasActiveSession => (hasActiveSession ?\r\n        of('') :\r\n        this.guestApiService.guestLogin(personDetails).pipe(\r\n          tap(token => this.sessionService.saveToken(token)),\r\n          switchMap(token => concat(\r\n            this.sessionService.validateSession(),\r\n            of(token)\r\n          ))\r\n        )\r\n      ))\r\n    );\r\n  }\r\n\r\n  register(userDetails: Registration) {\r\n    return this.sessionService.userHasActiveSession$.pipe(\r\n      take(1),\r\n      switchMap(() => this.registerApiService.register(userDetails)),\r\n      switchMap(() => this.loginApiService.login({\r\n        name: userDetails.name,\r\n        password: userDetails.password\r\n      })),\r\n      tap(token => this.sessionService.saveToken(token)),\r\n      switchMap(token => concat(\r\n        this.sessionService.validateSession(),\r\n        of(token)\r\n      ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param credentials Object with valid user credentials\r\n   * @returns A session token, or empty if one is already stored\r\n   */\r\n  login(credentials: Login) {\r\n    return this.sessionService.userHasActiveSession$.pipe(\r\n      take(1),\r\n      switchMap(hasActiveSession => (!hasActiveSession ?\r\n        this.loginApiService.login(credentials).pipe(\r\n          tap(token => this.sessionService.saveToken(token)),\r\n          switchMap(token => concat(\r\n            this.sessionService.validateSession(),\r\n            of(token)\r\n          ))\r\n        ) :\r\n        of('')\r\n      ))\r\n    );\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CheckoutRequest } from 'src/models/CheckoutRequest';\r\nimport { Product } from 'src/models/entities/Product';\r\nimport { SellDetail } from 'src/models/entities/SellDetail';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StoreCartService {\r\n\r\n  private cartDetailsSource = new BehaviorSubject<SellDetail[]>([]);\r\n  private checkoutRequestSource = new BehaviorSubject<CheckoutRequest>(null);\r\n\r\n  cartDetails$ = this.cartDetailsSource.asObservable();\r\n  checkoutRequest$ = this.checkoutRequestSource.asObservable();\r\n  cartItemCount$ = this.calculateItemCount();\r\n  cartNetValue$ = this.calculateNetValue();\r\n\r\n  constructor() { }\r\n\r\n  reset(): void {\r\n    this.cartDetailsSource.next([]);\r\n  }\r\n\r\n  addProductToCart(product: Product): void {\r\n    const index: number = this.findSellDetailsIndexByProductBarcode(product.barcode);\r\n\r\n    if (index !== -1) {\r\n      this.cartDetailsSource.value[index].units++;\r\n    } else {\r\n      const newSellDetail: SellDetail = {\r\n        product,\r\n        units: 1\r\n      };\r\n      this.cartDetailsSource.value.push(newSellDetail);\r\n    }\r\n\r\n    this.cartDetailsSource.next(this.cartDetailsSource.value);\r\n  }\r\n\r\n  increaseProductUnits(index: number): void {\r\n    if (index !== -1) {\r\n      this.cartDetailsSource.value[index].units++;\r\n      this.cartDetailsSource.next(this.cartDetailsSource.value);\r\n    }\r\n  }\r\n\r\n  decreaseProductUnits(index: number): void {\r\n    if (index !== -1) {\r\n      const matchingDetail = this.cartDetailsSource.value[index];\r\n      if (matchingDetail.units > 1) {\r\n        matchingDetail.units--;\r\n        this.cartDetailsSource.next(this.cartDetailsSource.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeProductFromCart(index: number): void {\r\n    if (index !== -1) {\r\n      this.cartDetailsSource.value.splice(index, 1);\r\n      this.cartDetailsSource.next(this.cartDetailsSource.value);\r\n    }\r\n  }\r\n\r\n  updateCheckoutRequest(info: CheckoutRequest): void {\r\n    this.checkoutRequestSource.next(info);\r\n  }\r\n\r\n  private findSellDetailsIndexByProductBarcode(barcode: string): number {\r\n    return this.cartDetailsSource.value.findIndex(d => (d.product?.barcode === barcode));\r\n  }\r\n\r\n  private calculateItemCount(): Observable<number> {\r\n    return this.cartDetails$.pipe(\r\n      map(array => (array.length === 0) ?\r\n        0 :\r\n        array.map(detail => detail.units)\r\n          .reduce((a, b) => (a + b))\r\n      )\r\n    );\r\n  }\r\n\r\n  private calculateNetValue(): Observable<number> {\r\n    return this.cartDetails$.pipe(\r\n      map(array => (array.length === 0) ?\r\n        0 :\r\n        array.map(p => p.product.price * p.units)\r\n          .reduce((a, b) => a + b)\r\n      )\r\n    );\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Subject, Subscription, throwError } from 'rxjs';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/authentication.service';\r\nimport { CheckoutRequest } from 'src/models/CheckoutRequest';\r\nimport { StoreCartService } from '../../store-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-store-guest-login-form-dialog',\r\n  templateUrl: './store-guest-login-form-dialog.component.html',\r\n  styleUrls: ['./store-guest-login-form-dialog.component.css']\r\n})\r\nexport class StoreGuestLoginFormDialogComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private actionSubscription: Subscription;\r\n  private submittingSource = new Subject<boolean>();\r\n\r\n  submitting$ = this.submittingSource.asObservable();\r\n\r\n  formGroup: FormGroup;\r\n  get person() { return this.formGroup.get('person') as FormControl; }\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private dialog: MatDialogRef<StoreGuestLoginFormDialogComponent>,\r\n    private cartService: StoreCartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = new FormGroup({\r\n      person: new FormControl(null, Validators.required)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.actionSubscription?.unsubscribe();\r\n    this.submittingSource.complete();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.formGroup.valid) {\r\n      this.submittingSource.next(true);\r\n      this.actionSubscription?.unsubscribe();\r\n      this.actionSubscription = this.authenticationService.guestLogin(this.person.value).pipe(\r\n        takeUntil(this.authenticationService.authCancelation$),\r\n        tap(\r\n          () => {\r\n            const updated = { customer: this.person.value } as CheckoutRequest;\r\n            this.cartService.updateCheckoutRequest(updated);\r\n            this.dialog.close();\r\n          },\r\n          err => {\r\n            this.submittingSource.next(false);\r\n            return throwError(err);\r\n          }\r\n        )\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.authenticationService.cancelAuthentication();\r\n    this.dialog.close();\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<h2 mat-dialog-title i18n=\"Title of dialog prompt to indicate personal info for a guest, temporary login\">Continue as guest</h2>\r\n<p i18n=\"Label to instruct user to input billing information\">Please provide your billing information.</p>\r\n<p i18n=\"Label to hint user that their billing information is solely used to secure their transaction\">We request this for security purposes, to keep your transaction safe and secure.</p>\r\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n  <app-person-form formControlName=\"person\">\r\n  </app-person-form>\r\n\r\n  <div class=\"actions\">\r\n    <button mat-button mat-raised-button type=\"submit\"\r\n      [disabled]=\"submitting$ | async\"\r\n      color=\"primary\">\r\n      <span i18n=\"confirm|Label for action button to accept and proceed\">Confirm</span>\r\n    </button>\r\n    <button mat-button mat-raised-button type=\"button\"\r\n      (click)=\"onCancel()\">\r\n      <span i18n=\"cancel|Label for action button to cancel and/or stop an operation\">Cancel</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport enum StoreGuestPromptDialogOptions {\r\n  login = 1, // pass falsy checks\r\n  register,\r\n  guest\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { StoreGuestPromptDialogOptions } from './StoreGuestPromptDialogOptions';\r\n\r\n@Component({\r\n  selector: 'app-store-guest-prompt-dialog',\r\n  templateUrl: './store-guest-prompt-dialog.component.html',\r\n  styleUrls: ['./store-guest-prompt-dialog.component.css']\r\n})\r\nexport class StoreGuestPromptDialogComponent {\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<StoreGuestPromptDialogComponent>\r\n  ) { }\r\n\r\n  onClickOption(n: string): void {\r\n    if (n in StoreGuestPromptDialogOptions) {\r\n      this.dialog.close(StoreGuestPromptDialogOptions[n]);\r\n    } else {\r\n      this.dialog.close();\r\n    }\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<h3 mat-dialog-title i18n=\"Title of dialog prompt to indicate users that some sort of ID is required\">Identification is Required</h3>\r\n<p i18n=\"Label to hint user that they must log in, register or indicate some personal info to proceed\">To review your cart, you need to either log in to your account, register anew (it's free) or start a guest session by giving your billing details.</p>\r\n<p i18n=\"Label to instruct user that they choose one option out of three\">Please, choose one of the following three:</p>\r\n<div class=\"actions\">\r\n  <button mat-button mat-raised-button type=\"button\"\r\n    (click)=\"onClickOption('login')\">\r\n    <span i18n=\"log in|Label for action button to prompt login\">Log in</span>\r\n    <mat-icon>verified_user</mat-icon>\r\n  </button>\r\n  <button mat-button mat-raised-button type=\"button\"\r\n    (click)=\"onClickOption('register')\">\r\n    <span i18n=\"register|Label for action button to prompt registration\">Register</span>\r\n    <mat-icon>person_add</mat-icon>\r\n  </button>\r\n  <button mat-button mat-raised-button type=\"button\"\r\n    (click)=\"onClickOption('guest')\">\r\n    <span i18n=\"continue as guest|Label for action button to prompt a guest, temporary login\">Continue as guest</span>\r\n    <mat-icon>remove_moderator</mat-icon>\r\n  </button>\r\n</div>\r\n<p class=\"hint\" i18n=\"Label to hint user that they can click away from current dialog to close it\">You can close this window clicking away from it</p>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nexport function passwordMatcher(c: AbstractControl): { [key: string]: boolean } | null {\r\n  const emailControl = c.get('pass1');\r\n  const confirmControl = c.get('pass2');\r\n\r\n  if (emailControl.pristine || confirmControl.pristine) {\r\n    return null;\r\n  }\r\n\r\n  if (emailControl.value === confirmControl.value) {\r\n    return null;\r\n  }\r\n  return { match: true };\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<h2 mat-dialog-title i18n=\"Title of dialog prompt for registering a new user account\">New User Account</h2>\r\n<app-centered-mat-spinner *ngIf=\"registering$ | async\">\r\n</app-centered-mat-spinner>\r\n<div [hidden]=\"registering$ | async\">\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field class=\"name\">\r\n      <input matInput formControlName=\"name\"\r\n        placeholder=\"User name\"\r\n        i18n-placeholder=\"new user name|Name of field for username to register with\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"pass1\">\r\n      <input matInput formControlName=\"pass1\" type=\"password\"\r\n        placeholder=\"Password\"\r\n        i18n-placeholder=\"new user password|Name of field for password to register with\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"pass2\">\r\n      <input matInput formControlName=\"pass2\" type=\"password\"\r\n        placeholder=\"Repeat password\"\r\n        i18n-placeholder=\"Name of field for password confirmation by repetition\" />\r\n    </mat-form-field>\r\n\r\n    <app-person-form formControlName=\"person\">\r\n    </app-person-form>\r\n\r\n    <div class=\"actions\">\r\n      <button mat-button mat-raised-button type=\"submit\"\r\n        color=\"primary\"\r\n        [disabled]=\"formGroup.invalid\">\r\n        <span i18n=\"confirm|Label for action button to accept and proceed\">Confirm</span>\r\n      </button>\r\n\r\n      <button mat-button mat-raised-button type=\"button\"\r\n        (click)=\"onCancel()\">\r\n        <span i18n=\"cancel|Label for action button to cancel and/or stop an operation\">Cancel</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Subscription, throwError } from 'rxjs';\r\nimport { catchError, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/authentication.service';\r\nimport { ProfileService } from 'src/app/profile.service';\r\nimport { EntityFormGroupFactoryService } from 'src/app/shared/entity-form-group-factory.service';\r\nimport { passwordMatcher } from 'src/functions/passwordMatcher';\r\nimport { Person } from 'src/models/entities/Person';\r\nimport { Registration } from 'src/models/Registration';\r\nimport { COMMON_DISMISS_BUTTON_LABEL } from 'src/text/messages';\r\n\r\n/**\r\n * Account registration form dialog.\r\n *\r\n * afterClosed() emits true only if the registration is succesful\r\n */\r\n@Component({\r\n  selector: 'app-store-registration-form-dialog',\r\n  templateUrl: './store-registration-form-dialog.component.html',\r\n  styleUrls: ['./store-registration-form-dialog.component.css']\r\n})\r\nexport class StoreRegistrationFormDialogComponent\r\n  implements OnDestroy {\r\n\r\n  private actionSubscription: Subscription;\r\n  private registeringSource = new BehaviorSubject(false);\r\n\r\n  registering$ = this.registeringSource.asObservable();\r\n\r\n  formGroup: FormGroup;\r\n  get name() { return this.formGroup.get('name') as FormControl; }\r\n  get pass1() { return this.formGroup.get('pass1') as FormControl; }\r\n  get pass2() { return this.formGroup.get('pass2') as FormControl; }\r\n  get person() { return this.formGroup.get('person') as FormControl; }\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private profileService: ProfileService,\r\n    private formBuilder: FormBuilder,\r\n    private dialog: MatDialogRef<StoreRegistrationFormDialogComponent>,\r\n    private snackBarService: MatSnackBar,\r\n    private entityFormGroupService: EntityFormGroupFactoryService\r\n  ) {\r\n    this.formGroup = this.formBuilder.group(\r\n      {\r\n        name: ['', Validators.required],\r\n        pass1: ['', Validators.required],\r\n        pass2: ['', Validators.required],\r\n        person: [null, Validators.required]\r\n      },\r\n      { validators: passwordMatcher }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.actionSubscription?.unsubscribe();\r\n    this.registeringSource.complete();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.formGroup.valid) {\r\n      this.registeringSource.next(true);\r\n      const details: Registration = {\r\n        name: this.name.value,\r\n        password: this.pass1.value,\r\n        profile: this.person.value as Person\r\n      };\r\n\r\n      this.actionSubscription?.unsubscribe();\r\n      this.actionSubscription = this.authenticationService.register(details).pipe(\r\n        takeUntil(this.authenticationService.authCancelation$),\r\n        tap(() => {\r\n          const successMessage = $localize`:Message of success after registration:Registration was succesful. Please remember to keep your password safe, and enjoy shopping!`;\r\n          this.snackBarService.open(successMessage, COMMON_DISMISS_BUTTON_LABEL);\r\n          this.dialog.close(true);\r\n        }),\r\n        catchError(err => {\r\n          const errorMessage = $localize`:Message of error during registration, hint user to try again:There was an error during registration. Please try again.`;\r\n          this.snackBarService.open(errorMessage, COMMON_DISMISS_BUTTON_LABEL);\r\n          this.registeringSource.next(false);\r\n          return throwError(err);\r\n        }),\r\n        switchMap(() => this.profileService.getUserProfile())\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.authenticationService.cancelAuthentication();\r\n    this.dialog.close();\r\n  }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<h2 mat-dialog-title i18n=\"Title of dialog prompt for logging in\">Log In</h2>\r\n<app-centered-mat-spinner *ngIf=\"loggingIn$ | async\">\r\n</app-centered-mat-spinner>\r\n\r\n<div [hidden]=\"loggingIn$ | async\">\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field class=\"username\">\r\n      <input matInput formControlName=\"username\"\r\n        placeholder=\"User name\"\r\n        i18n-placeholder=\"login username|Name of field for username to log in with\" />\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"password\">\r\n      <input matInput [type]=\"passwordInputType$ | async\" formControlName=\"password\"\r\n        placeholder=\"Password\"\r\n        i18n-placeholder=\"login password|Name of field for password to log in with\" />\r\n      <button matSuffix mat-icon-button type=\"button\"\r\n        aria-label=\"Hold to peek...\"\r\n        i18n-aria-label=\"hold to show password|Label for action button to show password while held down\"\r\n        (mousedown)=\"showPassword()\"\r\n        (mouseup)=\"hidePassword()\"\r\n        (mouseleave)=\"hidePassword()\">\r\n        <mat-icon>{{ togglePasswordIcon$ | async }}</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n\r\n    <div class=\"actions\">\r\n      <button mat-button mat-raised-button type=\"submit\"\r\n        color=\"primary\"\r\n        [disabled]=\"formGroup.invalid\">\r\n        <span i18n=\"confirm|Label for action button to accept and proceed\">Confirm</span>\r\n      </button>\r\n      <button mat-button mat-raised-button type=\"reset\"\r\n        [disabled]=\"formGroup.pristine\">\r\n        <span i18n=\"clean up|Label for action button to clear values in form\">Clean up</span>\r\n      </button>\r\n      <button mat-button mat-raised-button type=\"button\"\r\n        color=\"warn\"\r\n        (click)=\"onCancel()\">\r\n        <span i18n=\"cancel|Label for action button to cancel and/or stop an operation\">Cancel</span>\r\n      </button>\r\n    </div>\r\n  </form>\r\n  <div class=\"other actions\">\r\n    <app-dialog-switcher-button #registerButton\r\n      label=\"Don't have an account? Register here\"\r\n      i18n-label=\"Label to hint user to register if they do not have an account\">\r\n    </app-dialog-switcher-button>\r\n  </div>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\r\nimport { map, takeUntil, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/authentication.service';\r\nimport { DialogSwitcherButtonComponent } from 'src/app/shared/components/dialog-switcher-button/dialog-switcher-button.component';\r\nimport { Login } from 'src/models/Login';\r\nimport { COMMON_DISMISS_BUTTON_LABEL, COMMON_ERROR_MESSAGE } from 'src/text/messages';\r\nimport { StoreRegistrationFormDialogComponent } from '../registration-form/store-registration-form-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-store-login-form-dialog',\r\n  templateUrl: './store-login-form-dialog.component.html',\r\n  styleUrls: ['./store-login-form-dialog.component.css']\r\n})\r\nexport class StoreLoginFormDialogComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private actionSubscription: Subscription;\r\n  private loggingInSource = new Subject();\r\n  private hidePasswordSource = new BehaviorSubject(true);\r\n\r\n  loggingIn$ = this.loggingInSource.asObservable();\r\n\r\n  togglePasswordIcon$: Observable<string>;\r\n  passwordInputType$: Observable<string>;\r\n\r\n  formGroup: FormGroup;\r\n  get username() { return this.formGroup.get('username') as FormControl; }\r\n  get password() { return this.formGroup.get('password') as FormControl; }\r\n\r\n  @ViewChild('registerButton', { static: true }) registerButton: DialogSwitcherButtonComponent;\r\n\r\n  constructor(\r\n    private dialog: MatDialogRef<StoreLoginFormDialogComponent>,\r\n    private formBuilder: FormBuilder,\r\n    private snackBarService: MatSnackBar,\r\n    private authenticationService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    this.togglePasswordIcon$ = this.hidePasswordSource.asObservable().pipe(\r\n      map(hide => (hide ? 'visibility' : 'visibility_off'))\r\n    );\r\n    this.passwordInputType$ = this.hidePasswordSource.asObservable().pipe(\r\n      map(hide => (hide ? 'password' : 'text'))\r\n    );\r\n\r\n    this.registerButton.sourceDialogRef = this.dialog;\r\n    this.registerButton.targetDialogComponent = StoreRegistrationFormDialogComponent;\r\n    this.registerButton.targetDialogConfig = { width: '40rem' };\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.actionSubscription?.unsubscribe();\r\n    this.loggingInSource.complete();\r\n    this.hidePasswordSource.complete();\r\n  }\r\n\r\n  showPassword(): void {\r\n    this.hidePasswordSource.next(false);\r\n  }\r\n  hidePassword(): void {\r\n    this.hidePasswordSource.next(true);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.formGroup.valid) {\r\n      this.loggingInSource.next(true);\r\n\r\n      const details: Login = {\r\n        name: this.username.value,\r\n        password: this.password.value\r\n      };\r\n\r\n      this.actionSubscription?.unsubscribe();\r\n      this.actionSubscription = this.authenticationService.login(details).pipe(\r\n        takeUntil(this.authenticationService.authCancelation$),\r\n        tap(\r\n          () => {\r\n            this.dialog.close();\r\n            const successMessage = $localize`:Message of success after login:You have logged in`\r\n            this.snackBarService.open(successMessage, COMMON_DISMISS_BUTTON_LABEL);\r\n          },\r\n          err => {\r\n            if (err.status === 403) {\r\n              const errorMessage = $localize`:Message of error due to bad/erroneous credentials:Your credentials were rejected`;\r\n              this.snackBarService.open(errorMessage, COMMON_DISMISS_BUTTON_LABEL);\r\n            } else {\r\n              this.snackBarService.open(COMMON_ERROR_MESSAGE, COMMON_DISMISS_BUTTON_LABEL);\r\n            }\r\n            this.loggingInSource.next(false);\r\n          }\r\n        )\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.authenticationService.cancelAuthentication();\r\n    this.dialog.close();\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, skip, switchMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/authentication.service';\r\nimport { SessionService } from 'src/app/session.service';\r\nimport { StoreGuestLoginFormDialogComponent } from '../../dialogs/guest-login-form/store-guest-login-form-dialog.component';\r\nimport { StoreGuestPromptDialogComponent } from '../../dialogs/guest-prompt/store-guest-prompt-dialog.component';\r\nimport { StoreGuestPromptDialogOptions } from '../../dialogs/guest-prompt/StoreGuestPromptDialogOptions';\r\nimport { StoreLoginFormDialogComponent } from '../../dialogs/login-form/store-login-form-dialog.component';\r\nimport { StoreRegistrationFormDialogComponent } from '../../dialogs/registration-form/store-registration-form-dialog.component';\r\nimport { StoreCartService } from '../../store-cart.service';\r\n\r\n@Injectable()\r\nexport class StoreCartReviewGuard\r\n  implements CanActivate {\r\n\r\n  private readonly exitUrl = '/store';\r\n\r\n  constructor(\r\n    private cartService: StoreCartService,\r\n    private appService: SessionService,\r\n    private authenticationService: AuthenticationService,\r\n    private dialogService: MatDialog,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.cartService.cartDetails$.pipe(\r\n      take(1),\r\n      map(details => (details.length > 0)),\r\n      switchMap(isCartNotEmpty => (isCartNotEmpty ?\r\n        this.requireAuthentication() :\r\n        of(false)\r\n      )),\r\n      tap(isAllowed => {\r\n        if (!isAllowed) {\r\n          this.router.navigateByUrl(this.exitUrl);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private requireAuthentication(): Observable<boolean> {\r\n    return this.appService.userHasActiveSession$.pipe(\r\n      take(1),\r\n      switchMap(isLoggedIn => (isLoggedIn ?\r\n        of(true) :\r\n        this.promptGuestUserChoices().pipe(\r\n          switchMap((choice: StoreGuestPromptDialogOptions | undefined) => {\r\n            if (!choice) {\r\n              return of(false);\r\n            } else {\r\n              this.followGuestUserChoice(choice);\r\n              return this.appService.userHasActiveSession$.pipe(\r\n                skip(1),\r\n                take(1),\r\n                takeUntil(this.authenticationService.authCancelation$)\r\n              );\r\n            }\r\n          })\r\n        )\r\n      ))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Displays a dialog to give authentication options for a guest user.\r\n   * Returns an Observable that emits the user's option choice to continue\r\n   * the checkout process, or completes without emitting.\r\n   */\r\n  private promptGuestUserChoices() {\r\n    return this.dialogService.open(\r\n      StoreGuestPromptDialogComponent\r\n    ).afterClosed();\r\n  }\r\n\r\n  private followGuestUserChoice(choice: StoreGuestPromptDialogOptions): void {\r\n    switch (choice) {\r\n      case StoreGuestPromptDialogOptions.login:\r\n        this.promptLoginForm(); return;\r\n      case StoreGuestPromptDialogOptions.register:\r\n        this.promptRegistrationForm(); return;\r\n      case StoreGuestPromptDialogOptions.guest:\r\n        this.promptGuestShippingForm(); return;\r\n    }\r\n  }\r\n\r\n\r\n  private promptLoginForm() {\r\n    return this.dialogService.open(\r\n      StoreLoginFormDialogComponent,\r\n      {\r\n        width: '24rem'\r\n      }\r\n    );\r\n  }\r\n\r\n  private promptRegistrationForm() {\r\n    return this.dialogService.open(\r\n      StoreRegistrationFormDialogComponent,\r\n      {\r\n        width: '40rem',\r\n        height: '25rem'\r\n      }\r\n    );\r\n  }\r\n\r\n  private promptGuestShippingForm() {\r\n    return this.dialogService.open(\r\n      StoreGuestLoginFormDialogComponent,\r\n      {\r\n        width: '40rem',\r\n        height: '25rem'\r\n      }\r\n    );\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, from, ReplaySubject } from 'rxjs';\r\nimport { finalize, tap } from 'rxjs/operators';\r\nimport { API_INJECTION_TOKENS } from 'src/app/api/api-injection-tokens';\r\nimport { ITransactionalEntityDataApiService } from 'src/app/api/transactional-entity.data-api.iservice';\r\nimport { ITransactionalProductListContentsDataApiService } from 'src/app/api/transactional-product-list-contents.data.api.iservice';\r\nimport { DataPage } from 'src/models/DataPage';\r\nimport { Product } from 'src/models/entities/Product';\r\nimport { ProductList } from 'src/models/entities/ProductList';\r\n\r\n@Injectable()\r\nexport class StoreCatalogService {\r\n\r\n  private loadingSource = new BehaviorSubject(false);\r\n  private listsPageSource = new ReplaySubject<DataPage<ProductList>>(1);\r\n\r\n  listsPage$ = this.listsPageSource.asObservable();\r\n  loading$ = this.loadingSource.asObservable();\r\n\r\n  listIndex = 0;\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.dataProductLists) private productListApiService: ITransactionalProductListContentsDataApiService,\r\n    @Inject(API_INJECTION_TOKENS.dataProducts) private productsApiService: ITransactionalEntityDataApiService<Product>,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  reloadItems() {\r\n    this.loadingSource.next(true);\r\n\r\n    return this.productListApiService.fetchPage(this.listIndex).pipe(\r\n      tap(page => this.listsPageSource.next(page)),\r\n      finalize(() => this.loadingSource.next(false))\r\n    );\r\n  }\r\n\r\n  navigateToProductDetails(productBarcode: string) {\r\n    return from(this.router.navigate(\r\n      [],\r\n      {\r\n        relativeTo: this.route,\r\n        queryParams: { viewingProduct: productBarcode },\r\n        queryParamsHandling: 'merge'\r\n      }\r\n    ));\r\n  }\r\n\r\n  fetchProductDetails(barcode: string) {\r\n    return this.productsApiService.fetchExisting({\r\n      barcode\r\n    });\r\n  }\r\n\r\n}\r\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        var _a;\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return (_a = this._stepperOptions.showError) !== null && _a !== void 0 ? _a : this._customError != null;\n    }\n}\nCdkStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkStepper, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => CdkStepper)]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [STEPPER_GLOBAL_OPTIONS]\n                    }] }];\n    }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        var _a;\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            (_a = this.selected) === null || _a === void 0 ? void 0 : _a._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplciation. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n}\nCdkStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n}\nCdkStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\nCdkStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, imports: [[BidiModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i2 from '@angular/cdk/a11y';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n}\nMatStepperIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatStepperIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatStepHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], components: [{ type: i3.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i5.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepperIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatStepContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n        { provide: ErrorStateMatcher, useExisting: MatStep },\n        { provide: CdkStep, useExisting: MatStep },\n    ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", directives: [{ type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: MatStepper, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatStepper)]\n                    }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                        type: SkipSelf\n                    }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [STEPPER_GLOBAL_OPTIONS]\n                    }] }];\n    }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\n/**\n * Proxies the public APIs from `MatStepper` to the deprecated `MatHorizontalStepper` and\n * `MatVerticalStepper`.\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n * @docs-private\n */\nclass _MatProxyStepperBase extends CdkStepper {\n}\n_MatProxyStepperBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatProxyStepperBase, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n_MatProxyStepperBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatProxyStepperBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatProxyStepperBase, decorators: [{\n            type: Directive\n        }] });\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatHorizontalStepper extends _MatProxyStepperBase {\n}\nMatHorizontalStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHorizontalStepper, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHorizontalStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHorizontalStepper, selector: \"mat-horizontal-stepper\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHorizontalStepper, decorators: [{\n            type: Directive,\n            args: [{ selector: 'mat-horizontal-stepper' }]\n        }] });\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatVerticalStepper extends _MatProxyStepperBase {\n}\nMatVerticalStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatVerticalStepper, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatVerticalStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatVerticalStepper, selector: \"mat-vertical-stepper\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatVerticalStepper, decorators: [{\n            type: Directive,\n            args: [{ selector: 'mat-vertical-stepper' }]\n        }] });\nclass MatStepper extends CdkStepper {\n    constructor(dir, changeDetectorRef, elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n}\nMatStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [\n        { provide: CdkStepper, useExisting: MatStepper },\n        { provide: MatHorizontalStepper, useExisting: MatStepper },\n        { provide: MatVerticalStepper, useExisting: MatStepper },\n    ], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], components: [{ type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], directives: [{ type: i5.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i5.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matStepperAnimations.horizontalStepTransition,\n        matStepperAnimations.verticalStepTransition,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [\n                        { provide: CdkStepper, useExisting: MatStepper },\n                        { provide: MatHorizontalStepper, useExisting: MatStepper },\n                        { provide: MatVerticalStepper, useExisting: MatStepper },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperModule, declarations: [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent], imports: [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule], exports: [MatCommonModule,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent] });\nMatStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        MatButtonModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatHorizontalStepper,\n                        MatVerticalStepper,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatStepperModule } from \"@angular/material/stepper\";\r\n\r\nconst MATERIAL_MODULES = [\r\n  MatStepperModule\r\n];\r\n\r\n@NgModule({\r\n  imports: MATERIAL_MODULES,\r\n  exports: MATERIAL_MODULES\r\n})\r\nexport class StoreMaterialModule { }\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<fieldset [formGroup]=\"formGroup\">\r\n  <mat-radio-group formControlName=\"typeName\"\r\n    aria-label=\"Billing type\"\r\n    i18n-aria-label=\"Label for group of choices to select billing type from\">\r\n    <mat-radio-button *ngFor=\"let option of typesOptions\"\r\n      [value]=\"option[0]\"\r\n      (blur)=\"onTouched()\">{{ option[1] }}</mat-radio-button>\r\n  </mat-radio-group>\r\n  <app-company-form formControlName=\"company\">\r\n  </app-company-form>\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title i18n=\"Company address|Label for group of fields related to a company address\">Company address</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <ng-template matExpansionPanelContent>\r\n      <app-address-form formControlName=\"address\"\r\n        placeholder=\"Billing address\"\r\n        i18n-placeholder=\"Name of field for address to bill to\">\r\n      </app-address-form>\r\n    </ng-template>\r\n  </mat-expansion-panel>\r\n</fieldset>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl, ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALIDATORS,\r\n  NG_VALUE_ACCESSOR, ValidationErrors, Validator, Validators\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { isJavaScriptObject } from 'src/functions/isJavaScriptObject';\r\nimport { BILLING_TYPE_COMPANY, BILLING_TYPE_NAMES_MAP } from 'src/text/billing-type-names';\r\n\r\n@Component({\r\n  selector: 'app-store-billing-details-form',\r\n  templateUrl: './store-billing-details-form.component.html',\r\n  styleUrls: ['./store-billing-details-form.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: StoreBillingDetailsFormComponent\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      multi: true,\r\n      useExisting: StoreBillingDetailsFormComponent\r\n    }\r\n  ]\r\n})\r\nexport class StoreBillingDetailsFormComponent\r\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator {\r\n\r\n  private valueChangesSub: Subscription;\r\n  private typeNameChangesSub: Subscription;\r\n\r\n  readonly typesOptions = [ ...BILLING_TYPE_NAMES_MAP.entries() ];\r\n\r\n  @Input() formGroup: FormGroup;\r\n  get typeName() { return this.formGroup.get('typeName') as FormControl; }\r\n  get company() { return this.formGroup.get('company') as FormControl; }\r\n  get address() { return this.formGroup.get('address') as FormControl; }\r\n\r\n  onChange: (value: any) => void;\r\n  onTouched: () => void;\r\n  onValidatorChange: () => void;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.onChange = (v) => { };\r\n    this.onTouched = () => { };\r\n    this.onValidatorChange = () => { };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.formGroup) {\r\n      this.formGroup = this.formBuilder.group({\r\n        typeName: [null, Validators.required],\r\n        company: [{ value: null, disabled: true }, Validators.required],\r\n        address: [{ value: null, disabled: true }, Validators.required]\r\n      });\r\n    }\r\n    this.valueChangesSub = this.formGroup.valueChanges.pipe(\r\n      tap(v => this.onChange(v))\r\n    ).subscribe();\r\n    this.typeNameChangesSub = this.typeName.valueChanges.pipe(\r\n      tap(() => this.updateControlsAfterTypeNameChange())\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueChangesSub?.unsubscribe();\r\n    this.typeNameChangesSub?.unsubscribe();\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (this.formGroup) {\r\n      this.typeName.reset(null, { emitEvent: false });\r\n      this.company.reset({ value: null, disabled: true }, { emitEvent: false });\r\n      this.address.reset({ value: null, disabled: true }, { emitEvent: false });\r\n      if (isJavaScriptObject(obj)) {\r\n        this.formGroup.patchValue(obj, { emitEvent: false });\r\n        this.updateControlsAfterTypeNameChange({ emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    if (this.formGroup) {\r\n      if (isDisabled) {\r\n        this.formGroup.disable();\r\n      } else {\r\n        this.formGroup.enable();\r\n      }\r\n    }\r\n  }\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!this.formGroup || this.formGroup.valid) {\r\n      return null;\r\n    }\r\n\r\n    const errors = {} as ValidationErrors;\r\n\r\n    if (this.typeName.errors) {\r\n      errors.billingType = this.typeName.errors;\r\n    }\r\n    if (this.company.errors) {\r\n      errors.billingCompany = this.company.errors;\r\n    }\r\n    if (this.address.errors) {\r\n      errors.billingAddress = this.address.errors;\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this.onValidatorChange = fn;\r\n  }\r\n\r\n  private updateControlsAfterTypeNameChange(options?: { emitEvent?: boolean, onlySelf?: boolean }): void {\r\n    const v = this.typeName.value;\r\n    if (v === BILLING_TYPE_COMPANY) {\r\n      this.company.enable(options);\r\n      this.address.enable(options);\r\n    } else {\r\n      this.company.reset({ value: null, disabled: true }, options);\r\n      this.address.reset({ value: null, disabled: true }, options);\r\n    }\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<fieldset [formGroup]=\"formGroup\">\r\n  <mat-radio-group formControlName=\"included\"\r\n    aria-label=\"Choose a delivery option\"\r\n    i18n-aria-label=\"Label to hint user that they must choose a delivery option\">\r\n    <mat-radio-button [value]=\"true\"\r\n      (blur)=\"onTouched()\">\r\n      <span i18n=\"Label for option to choose delivery to a shipping address\">Deliver to address</span>\r\n    </mat-radio-button>\r\n    <mat-radio-button [value]=\"false\"\r\n      (blur)=\"onTouched()\" >\r\n      <span i18n=\"Label for option to choose pick-up in store\">Pickup in store</span>\r\n    </mat-radio-button>\r\n  </mat-radio-group>\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title\r\n        i18n=\"Shipping address|Label for group of fields related to an address to ship items to\">Shipping address</mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <ng-template matExpansionPanelContent>\r\n      <app-address-form formControlName=\"address\"\r\n        placeholder=\"Shipping address\"\r\n        i18n-placeholder=\"Name of field for address to deliver items to\">\r\n      </app-address-form>\r\n    </ng-template>\r\n  </mat-expansion-panel>\r\n</fieldset>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl, ControlValueAccessor, FormBuilder, FormControl, FormGroup,\r\n  NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator, Validators\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { isJavaScriptObject } from 'src/functions/isJavaScriptObject';\r\n\r\n@Component({\r\n  selector: 'app-store-shipping-details-form',\r\n  templateUrl: './store-shipping-details-form.component.html',\r\n  styleUrls: ['./store-shipping-details-form.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      useExisting: StoreShippingDetailsFormComponent\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      multi: true,\r\n      useExisting: StoreShippingDetailsFormComponent\r\n    }\r\n  ]\r\n})\r\nexport class StoreShippingDetailsFormComponent\r\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator {\r\n\r\n  private valueChangesSub: Subscription;\r\n  private includeShippingChangesSub: Subscription;\r\n\r\n  @Input() formGroup: FormGroup;\r\n  get included() { return this.formGroup.get('included') as FormControl; }\r\n  get address() { return this.formGroup.get('address') as FormControl; }\r\n\r\n  onChange: (value: any) => void;\r\n  onTouched: () => void;\r\n  onValidatorChange: () => void;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.onChange = (v) => { };\r\n    this.onTouched = () => { };\r\n    this.onValidatorChange = () => { };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.formGroup) {\r\n      this.formGroup = this.formBuilder.group({\r\n        included: [null, Validators.required],\r\n        address: [{ value: null, disabled: true }, Validators.required]\r\n      });\r\n    }\r\n    this.valueChangesSub = this.formGroup.valueChanges.pipe(\r\n      tap(v => this.onChange(v))\r\n    ).subscribe();\r\n    this.includeShippingChangesSub = this.included.valueChanges.pipe(\r\n      tap(() => this.updateControlsAfterShippingInclusionChange())\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.valueChangesSub?.unsubscribe();\r\n    this.includeShippingChangesSub?.unsubscribe();\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    if (this.formGroup) {\r\n      this.included.reset(null, { emitEvent: false });\r\n      this.address.reset({ value: null, disabled: true }, { emitEvent: false });\r\n      if (isJavaScriptObject(obj)) {\r\n        this.formGroup.patchValue(obj, { emitEvent: false });\r\n        this.updateControlsAfterShippingInclusionChange({ emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    if (this.formGroup) {\r\n      if (isDisabled) {\r\n        this.formGroup.disable({ emitEvent: false });\r\n      } else {\r\n        this.formGroup.enable({ emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    if (!this.formGroup || this.formGroup.valid) {\r\n      return null;\r\n    }\r\n\r\n    const errors = {} as ValidationErrors;\r\n\r\n    if (this.included.errors) {\r\n      errors.shippingIncluded = this.included.errors;\r\n    }\r\n    if (this.address.errors) {\r\n      errors.shippingAddress = this.address.errors;\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void): void {\r\n    this.onValidatorChange = fn;\r\n  }\r\n\r\n  private updateControlsAfterShippingInclusionChange(options?: { emitEvent?: boolean, onlySelf?: boolean }): void {\r\n    const v = this.included.value;\r\n    if (v) {\r\n      this.address.enable(options);\r\n    } else {\r\n      this.address.reset({ value: null, disabled: true }, options);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { filter, take, tap } from 'rxjs/operators';\r\nimport { COMMON_DISMISS_BUTTON_LABEL, COMMON_VALIDATION_ERROR_MESSAGE } from 'src/text/messages';\r\nimport { StoreCartService } from '../../store-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-store-checkout-request-form',\r\n  templateUrl: './store-checkout-request-form.component.html',\r\n  styleUrls: ['./store-checkout-request-form.component.css']\r\n})\r\nexport class StoreCheckoutRequestFormComponent\r\n  implements OnInit {\r\n\r\n  @Output() request = new EventEmitter<void>();\r\n\r\n  formGroup: FormGroup;\r\n  get billing() { return this.formGroup.get('billing') as FormControl; }\r\n  get customer() { return this.formGroup.get('customer') as FormControl; }\r\n  get shipping() { return this.formGroup.get('shipping') as FormControl; }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private snackBarService: MatSnackBar,\r\n    private cartService: StoreCartService\r\n  ) {\r\n    this.formGroup = this.formBuilder.group({\r\n      billing: [null, Validators.required],\r\n      customer: [null, Validators.required],\r\n      shipping: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cartService.checkoutRequest$.pipe(\r\n      take(1),\r\n      filter(checkoutRequestData => !!checkoutRequestData),\r\n      tap(checkoutRequestData => this.formGroup.patchValue(checkoutRequestData, { onlySelf: true, emitEvent: false }))\r\n    ).subscribe();\r\n  }\r\n\r\n  onRequest(): void {\r\n    if (this.formGroup.invalid) {\r\n      this.snackBarService.open(COMMON_VALIDATION_ERROR_MESSAGE, COMMON_DISMISS_BUTTON_LABEL);\r\n    } else {\r\n      this.cartService.updateCheckoutRequest(this.formGroup.value);\r\n      this.request.emit();\r\n    }\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"onRequest()\">\r\n  <div class=\"billing\">\r\n    <h3 i18n=\"Title of form for billing information\">Billing Details</h3>\r\n    <app-store-billing-details-form formControlName=\"billing\">\r\n    </app-store-billing-details-form>\r\n  </div>\r\n  <div class=\"customer\">\r\n    <h3 i18n=\"Title of form for personal information\">Personal Information</h3>\r\n    <app-person-form formControlName=\"customer\">\r\n    </app-person-form>\r\n  </div>\r\n  <div class=\"shipping\">\r\n    <h3 i18n=\"Title of form for shipping information\">Shipping Details</h3>\r\n    <app-store-shipping-details-form formControlName=\"shipping\">\r\n    </app-store-shipping-details-form>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <button type=\"submit\" class=\"request\"\r\n      mat-button mat-raised-button\r\n      color=\"accent\">\r\n      <span i18n=\"continue|Label for action button to proceed to next step in a form\">Continue</span>\r\n      <mat-icon>arrow_forward</mat-icon>\r\n    </button>\r\n  </div>\r\n</form>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API_INJECTION_TOKENS } from 'src/app/api/api-injection-tokens';\r\nimport { CheckoutRequest } from 'src/models/CheckoutRequest';\r\nimport { SellDetail } from 'src/models/entities/SellDetail';\r\nimport { ExternalPaymentRedirectionData } from 'src/models/ExternalPaymentRedirectionData';\r\nimport { BILLING_TYPE_COMPANY } from 'src/text/billing-type-names';\r\nimport { Sell } from '../../models/entities/Sell';\r\nimport { ICheckoutPublicApiService } from '../api/checkout-public-api.iservice';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StoreCheckoutService {\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.checkout) private checkoutApiService: ICheckoutPublicApiService\r\n  ) { }\r\n\r\n  // TODO refactor to a single object parameter requiring both properties\r\n  /**\r\n   * Sends a request for a new payment transaction\r\n   *\r\n   * @param customerData An object containg information about the customer\r\n   * @param checkoutDetails An array of product/service details about this transaction\r\n   */\r\n  requestTransaction(data: CheckoutRequest, cartDetails: SellDetail[]): Observable<ExternalPaymentRedirectionData> {\r\n    const sell = this.createCheckoutRequest(data, cartDetails);\r\n    return this.checkoutApiService.submitCart(sell);\r\n  }\r\n\r\n  private createCheckoutRequest(checkoutRequestData: CheckoutRequest, cartDetails: SellDetail[]): Sell {\r\n    const target: Partial<Sell> = {\r\n      customer: {\r\n        person: checkoutRequestData.customer\r\n      },\r\n      details: cartDetails\r\n    };\r\n\r\n    const billing = checkoutRequestData.billing;\r\n    target.billingType = billing.typeName;\r\n    if (billing.typeName === BILLING_TYPE_COMPANY) {\r\n      if (billing.company) {\r\n        target.billingCompany = billing.company;\r\n      }\r\n      if (billing.address){\r\n        target.billingAddress = billing.address;\r\n      }\r\n    }\r\n\r\n    const shipping = checkoutRequestData.shipping;\r\n    if (shipping?.included && shipping?.address) {\r\n      target.shippingAddress = shipping.address;\r\n    }\r\n\r\n    return target as Sell;\r\n  }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<mat-card>\r\n  <mat-card-header>\r\n    <h3 mat-card-title i18n=\"Title of widget to request confirmation of billing/personal/shipping information being correct\">Is This Information Correct?</h3>\r\n  </mat-card-header>\r\n  <div class=\"customer\">\r\n    <ng-container *ngIf=\"checkoutRequest.customer; else noCustomer\">\r\n      <mat-icon>person</mat-icon>&nbsp;\r\n      <span class=\"details\">\r\n        <span class=\"name\">{{ checkoutRequest.customer.firstName }} {{ checkoutRequest.customer.lastName }}</span>\r\n        <b class=\"idCard\">ID number {{ checkoutRequest.customer.idNumber }}</b>\r\n        <i class=\"email\">{{ checkoutRequest.customer.email }}</i>\r\n      </span>\r\n    </ng-container>\r\n    <ng-template #noCustomer>\r\n      <mat-icon>person_off</mat-icon>&nbsp;\r\n      <span class=\"details\">\r\n        <span class=\"name\" i18n=\"Label to indicate that a customer chose not to give personal information\">Anonymous</span>\r\n      </span>\r\n    </ng-template>\r\n  </div>\r\n  <div class=\"type\">\r\n    <mat-icon>receipt</mat-icon>&nbsp;\r\n    <span>{{ checkoutRequest.billing.typeName }}</span>\r\n  </div>\r\n  <div class=\"company\" *ngIf=\"checkoutRequest.billing.company\">\r\n    <mat-icon>business</mat-icon>&nbsp;\r\n    <span class=\"details\">\r\n      <span class=\"name\">{{ checkoutRequest.billing.company.name }}</span>\r\n      <b class=\"idNumber\">Company ID number {{ checkoutRequest.billing.company.idNumber }}</b>\r\n    </span>\r\n  </div>\r\n  <div class=\"shipping\">\r\n    <ng-container *ngIf=\"checkoutRequest.shipping.included; else noShipping\">\r\n      <mat-icon>local_shipping</mat-icon>&nbsp;\r\n      <span>{{ checkoutRequest.shipping.address | address }}</span>\r\n    </ng-container>\r\n    <ng-template #noShipping>\r\n      <mat-icon>local_shipping</mat-icon>&nbsp;\r\n      <span i18n=\"in-store delivery|Label to indicate that a customer chose to pick up items in store\">Pickup in store</span>\r\n    </ng-template>\r\n  </div>\r\n</mat-card>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { CheckoutRequest } from 'src/models/CheckoutRequest';\r\n\r\n@Component({\r\n  selector: 'app-store-checkout-request-information-card',\r\n  templateUrl: './store-checkout-request-information-card.component.html',\r\n  styleUrls: ['./store-checkout-request-information-card.component.css']\r\n})\r\nexport class StoreCheckoutRequestInformationCardComponent {\r\n\r\n  @Input() checkoutRequest: CheckoutRequest;\r\n\r\n  constructor() { }\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-store-checkout-confirmation-button',\r\n  templateUrl: './store-checkout-confirmation-button.component.html',\r\n  styleUrls: ['./store-checkout-confirmation-button.component.css']\r\n})\r\nexport class StoreCheckoutConfirmationButtonComponent {\r\n\r\n  @Input() disabled = false;\r\n\r\n  constructor() { }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<button type=\"button\" class=\"request\"\r\n  mat-button mat-raised-button\r\n  color=\"accent\"\r\n  [disabled]=\"disabled\">\r\n  <span i18n=\"request transaction|Label for action button to request a new transaction from payment service\">Request transaction</span>\r\n  <mat-icon>point_of_sale</mat-icon>\r\n</button>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport class ExternalPaymentRedirectionData {\r\n  url: string;\r\n  token: string;\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { ExternalPaymentRedirectionData } from 'src/models/ExternalPaymentRedirectionData';\r\n\r\n@Component({\r\n  selector: 'app-store-checkout-button',\r\n  templateUrl: './store-checkout-button.component.html',\r\n  styleUrls: ['./store-checkout-button.component.css']\r\n})\r\nexport class StoreCheckoutButtonComponent {\r\n\r\n  private innerCheckoutDetails = new ExternalPaymentRedirectionData();\r\n\r\n  disabled = true;\r\n\r\n  @Input() innerControlName = 'token_ws';\r\n\r\n  @Input()\r\n  get checkoutDetails() { return this.innerCheckoutDetails; }\r\n  set checkoutDetails(value: ExternalPaymentRedirectionData) {\r\n    if (value) {\r\n      this.disabled = false;\r\n      this.innerCheckoutDetails = value;\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<form #form method=\"post\" [action]=\"checkoutDetails.url\">\r\n  <input type=\"hidden\" [name]=\"innerControlName\" [value]=\"checkoutDetails.token\" />\r\n  <button type=\"submit\" class=\"checkout\"\r\n    mat-button mat-raised-button\r\n    color=\"accent\"\r\n    [disabled]=\"disabled\"\r\n    (click)=\"form.submit()\">\r\n    <span i18n=\"proceed to checkout|Label for action button to proceed towards payment page\">Proceed to checkout</span>\r\n    <mat-icon>attach_money</mat-icon>\r\n  </button>\r\n</form>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { CheckoutRequest } from 'src/models/CheckoutRequest';\r\nimport { ExternalPaymentRedirectionData } from 'src/models/ExternalPaymentRedirectionData';\r\nimport { StoreCartService } from '../../store-cart.service';\r\nimport { StoreCheckoutService } from '../../store-checkout.service';\r\n\r\n@Component({\r\n  selector: 'app-store-checkout-confirmation',\r\n  templateUrl: './store-checkout-confirmation.component.html',\r\n  styleUrls: ['./store-checkout-confirmation.component.css']\r\n})\r\nexport class StoreCheckoutConfirmationComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private actionSubscription: Subscription;\r\n  private checkoutButtonPressSub: Subscription;\r\n\r\n  @Output() confirmed = new EventEmitter<void>();\r\n\r\n  loading = false;\r\n  checkoutDetails: ExternalPaymentRedirectionData = null;\r\n\r\n  checkoutRequest$: Observable<CheckoutRequest>;\r\n\r\n  constructor(\r\n    private cartService: StoreCartService,\r\n    private checkoutService: StoreCheckoutService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkoutRequest$ = this.cartService.checkoutRequest$.pipe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.checkoutButtonPressSub?.unsubscribe();\r\n    this.actionSubscription?.unsubscribe();\r\n    this.confirmed.complete();\r\n  }\r\n\r\n  onClickConfirm(): void {\r\n    this.actionSubscription?.unsubscribe();\r\n    this.actionSubscription = this.getCartData().pipe(\r\n      switchMap(cart => this.checkoutService.requestTransaction(cart.data, cart.details)),\r\n      tap(\r\n        next => {\r\n          this.confirmed.emit();\r\n          this.checkoutDetails = next;\r\n        },\r\n        err => {\r\n          this.loading = false;\r\n        }\r\n      )\r\n    ).subscribe();\r\n  }\r\n\r\n  // TODO use more appropiate rxjs operators\r\n  private getCartData() {\r\n    return this.checkoutRequest$.pipe(\r\n      take(1),\r\n      switchMap(data => (\r\n        this.cartService.cartDetails$.pipe(\r\n          take(1),\r\n          map(details => (\r\n            {\r\n              data,\r\n              details\r\n            }\r\n          ))\r\n        )\r\n      ))\r\n    );\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-store-checkout-request-information-card\r\n  [checkoutRequest]=\"checkoutRequest$ | async\">\r\n</app-store-checkout-request-information-card>\r\n<p i18n=\"Label to instruct user that, after having checked correctness of billing/personal/shipping information, they click the action button to request a new transaction\">After you've checked your details, you may click on the 'Request transaction' button below:</p>\r\n<app-store-checkout-confirmation-button\r\n  [disabled]=\"!!checkoutDetails\"\r\n  (click)=\"onClickConfirm()\">\r\n</app-store-checkout-confirmation-button>\r\n<mat-divider></mat-divider>\r\n<p i18n=\"Label to instruct user that, after requesting and waiting for a new transaction, they click the action button to proceed towards payment page\">After requesting your transaction,\r\n  you may click on the 'Proceed to checkout' button below:</p>\r\n<app-store-checkout-button\r\n  [checkoutDetails]=\"checkoutDetails\">\r\n</app-store-checkout-button>\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<div class=\"cart\">\r\n  <h3 i18n=\"cart contents review|Title of widget displaying contents of cart\">Cart Review</h3>\r\n  <app-sell-details-table [editable]=\"inputEditable\"\r\n    [sellDetails]=\"cartContents$ | async\"\r\n    (increaseUnitsAtIndex)=\"onIncreaseProductQuantityAtIndex($event)\"\r\n    (decreaseUnitsAtIndex)=\"onDecreaseProductQuantityAtIndex($event)\"\r\n    (removeAtIndex)=\"onRemoveProductAtIndex($event)\">\r\n  </app-sell-details-table>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"subtotal\">\r\n    <span class=\"label\" i18n=\"subtotal sell value|Label with cart subtotal value (products only)\">Subtotal</span>\r\n    <span class=\"value\">{{ (cartNetValue$ | async) | currency }}</span>\r\n  </div>\r\n</div>\r\n<mat-horizontal-stepper linear #stepper>\r\n  <mat-step #inputStep\r\n    [stepControl]=\"checkoutRequest.formGroup\"\r\n    [editable]=\"inputEditable\">\r\n    <ng-template matStepLabel i18n=\"Title of form step to input checkout details\">Required Information</ng-template>\r\n    <app-store-checkout-request-form #checkoutRequest\r\n      (request)=\"stepper.next()\">\r\n    </app-store-checkout-request-form>\r\n  </mat-step>\r\n  <mat-step #confirmationStep>\r\n    <ng-template matStepLabel i18n=\"Title of form step to confirm checkout details\">Confirmation</ng-template>\r\n    <ng-template matStepContent>\r\n      <app-store-checkout-confirmation\r\n        (confirmed)=\"onConfirmation()\">\r\n      </app-store-checkout-confirmation>\r\n    </ng-template>\r\n  </mat-step>\r\n</mat-horizontal-stepper>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SellDetail } from 'src/models/entities/SellDetail';\r\nimport { StoreCartService } from '../../store-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-store-cart-review',\r\n  templateUrl: './store-cart-review.component.html',\r\n  styleUrls: ['./store-cart-review.component.css']\r\n})\r\nexport class StoreCartReviewComponent\r\n  implements OnInit {\r\n\r\n  cartNetValue$: Observable<number>;\r\n  cartContents$: Observable<SellDetail[]>;\r\n  inputEditable = true;\r\n\r\n  constructor(\r\n    private cartService: StoreCartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cartNetValue$ = this.cartService.cartNetValue$.pipe();\r\n    this.cartContents$ = this.cartService.cartDetails$.pipe();\r\n  }\r\n\r\n  onIncreaseProductQuantityAtIndex(index: number): void {\r\n    this.cartService.increaseProductUnits(index);\r\n  }\r\n\r\n  onDecreaseProductQuantityAtIndex(index: number): void {\r\n    this.cartService.decreaseProductUnits(index);\r\n  }\r\n\r\n  onRemoveProductAtIndex(index: number): void {\r\n    this.cartService.removeProductFromCart(index);\r\n  }\r\n\r\n  onConfirmation(): void {\r\n    this.inputEditable = false;\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { merge, Observable, of, Subject, Subscription } from 'rxjs';\r\nimport { map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { StoreCartService } from '../../store-cart.service';\r\nimport { StoreProductDetailsDialogData } from './StoreProductDetailsDialogData';\r\n\r\n@Component({\r\n  selector: 'app-store-product-details-dialog',\r\n  templateUrl: './store-product-details-dialog.component.html',\r\n  styleUrls: ['./store-product-details-dialog.component.css']\r\n})\r\nexport class StoreProductDetailsDialogComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private selfChangeTrigger = new Subject<void>();\r\n  private matchingCartIndex = NaN;\r\n  private cartDetailsSub: Subscription;\r\n\r\n  productNotInCart$: Observable<boolean>;\r\n  productUnitsInCart$: Observable<number>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: StoreProductDetailsDialogData,\r\n    private cartService: StoreCartService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.productUnitsInCart$ = merge(\r\n      of(void 0),\r\n      this.selfChangeTrigger.asObservable()\r\n    ).pipe(\r\n      switchMap(() => !Number.isNaN(this.matchingCartIndex) ?\r\n        this.cartService.cartDetails$.pipe(\r\n          take(1),\r\n          map(details => (details[this.matchingCartIndex]?.units || 0))\r\n        ) :\r\n        of(0)\r\n      )\r\n    );\r\n\r\n    this.cartDetailsSub = this.cartService.cartDetails$.pipe(\r\n      tap(details => {\r\n        this.matchingCartIndex = details.findIndex(d => (d.product?.barcode === this.data.product.barcode));\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.cartDetailsSub?.unsubscribe();\r\n    this.selfChangeTrigger.complete();\r\n  }\r\n\r\n  onClickIncreaseProductQuantity(): void {\r\n    if (this.matchingCartIndex !== -1) {\r\n      this.cartService.increaseProductUnits(this.matchingCartIndex);\r\n    } else {\r\n      this.cartService.addProductToCart(this.data.product);\r\n    }\r\n    this.selfChangeTrigger.next();\r\n  }\r\n\r\n  onClickDecreaseProductQuantity(): void {\r\n    if (this.matchingCartIndex !== -1) {\r\n      this.cartService.decreaseProductUnits(this.matchingCartIndex);\r\n      this.selfChangeTrigger.next();\r\n    }\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-slideshow\r\n  [images]=\"data.product.images\"\r\n  [automaticSlide]=\"false\">\r\n</app-slideshow>\r\n<div class=\"about\">\r\n  <h2 mat-dialog-title class=\"name\">{{ data.product.name }}</h2>\r\n  <h4 class=\"barcode\">{{ data.product.barcode }}</h4>\r\n  <p class=\"description\">{{ data.product.description }}</p>\r\n</div>\r\n<div class=\"actions\">\r\n  <span class=\"price\">{{ data.product.price | currency }}</span>\r\n  <div class=\"add-to-cart\">\r\n    <mat-icon>shopping_cart</mat-icon>\r\n    <div class=\"quantity-wrapper\">\r\n      <button mat-button mat-icon-button type=\"button\"\r\n        (click)=\"onClickIncreaseProductQuantity()\">\r\n        <mat-icon>add </mat-icon>\r\n      </button>\r\n      <span class=\"quantity\">{{ productUnitsInCart$ | async }}</span>\r\n      <button mat-button mat-icon-button type=\"button\"\r\n        [disabled]=\"productNotInCart$ | async\"\r\n        (click)=\"onClickDecreaseProductQuantity()\">\r\n        <mat-icon>remove</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport class ProductList {\r\n  code: string;\r\n  name: string;\r\n  totalCount?: number;\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<div class=\"wrapper\" [ngClass]=\"{ scrollable: scrollable }\">\r\n  <div *ngIf=\"scrollable\" class=\"animated-scroll-hint\">\r\n    <mat-icon>swipe</mat-icon>\r\n  </div>\r\n  <div class=\"shadow\"></div>\r\n  <div class=\"contents\">\r\n    <app-centered-mat-spinner *ngIf=\"loading; else productCards\">\r\n    </app-centered-mat-spinner>\r\n    <ng-template #productCards>\r\n      <app-product-card *ngFor=\"let product of products\"\r\n        [product]=\"product\"\r\n        [showAddToCartButton]=\"showAddToCartButtons\"\r\n        (addToCart)=\"onAddProductToCart(product)\"\r\n        (view)=\"onViewProduct(product)\">\r\n      </app-product-card>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n<div class=\"scroll hint\" *ngIf=\"scrollable\"\r\n    i18n=\"Label to hint users to swipe to the sides\">Swipe to the sides to view more</div>\r\n<div class=\"paginator\" *ngIf=\"showPaginator && (totalCount > pageSize)\">\r\n  <mat-paginator\r\n    (page)=\"onPage($event)\"\r\n    [showFirstLastButtons]=\"true\"\r\n    [pageSizeOptions]=\"pageSizeOptions\"\r\n    [pageIndex]=\"pageIndex\"\r\n    [pageSize]=\"pageSize\"\r\n    [length]=\"totalCount\">\r\n  </mat-paginator>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Product } from 'src/models/entities/Product';\r\n\r\n@Component({\r\n  selector: 'app-store-products-lot-display',\r\n  templateUrl: './store-products-lot-display.component.html',\r\n  styleUrls: ['./store-products-lot-display.component.css']\r\n})\r\nexport class ProductsLotDisplayComponent {\r\n\r\n  @Input() products: Product[];\r\n  @Input() pageSizeOptions = [ 8, 20, 40, 80 ];\r\n  @Input() showPaginator = true;\r\n  @Input() showAddToCartButtons = false;\r\n  @Input() scrollable = true;\r\n  @Input() totalCount = 0;\r\n  @Input() pageIndex = 0;\r\n  @Input() pageSize = 10;\r\n  @Input() loading = true;\r\n\r\n  @Output() page = new EventEmitter<PageEvent>();\r\n  @Output() addProductToCart = new EventEmitter<Product>();\r\n  @Output() viewProduct = new EventEmitter<Product>();\r\n\r\n  onAddProductToCart(product: Product): void {\r\n    this.addProductToCart.emit(product);\r\n  }\r\n\r\n  onViewProduct(product: Product): void {\r\n    this.viewProduct.emit(product);\r\n  }\r\n\r\n  onPage(event: PageEvent): void {\r\n    this.page.emit(event);\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\r\nimport { finalize, map, tap } from 'rxjs/operators';\r\nimport { API_INJECTION_TOKENS } from 'src/app/api/api-injection-tokens';\r\nimport { ITransactionalProductListContentsDataApiService } from 'src/app/api/transactional-product-list-contents.data.api.iservice';\r\nimport { DataPage } from 'src/models/DataPage';\r\nimport { Product } from 'src/models/entities/Product';\r\nimport { ProductList } from 'src/models/entities/ProductList';\r\nimport { StoreCatalogService } from '../../routes/catalog/store-catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-store-product-list-contents-display',\r\n  templateUrl: './store-product-list-contents-display.component.html',\r\n  styleUrls: ['./store-product-list-contents-display.component.css']\r\n})\r\nexport class StoreProductListContentsDisplayComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private loadingSubscription: Subscription;\r\n  private pageSource = new ReplaySubject<DataPage<Product>>(1);\r\n\r\n  @Input() list = new ProductList();\r\n\r\n  @Output() addProductToCart = new EventEmitter<Product>();\r\n\r\n  pageIndex = 0;\r\n  pageSize = 10;\r\n  page$ = this.pageSource.asObservable();\r\n\r\n  loadingProducts = true;\r\n  products$: Observable<Product[]>;\r\n  totalCount$: Observable<number>;\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.dataProductLists) private productListApiService: ITransactionalProductListContentsDataApiService,\r\n    private catalogService: StoreCatalogService\r\n  ) {\r\n    this.products$ = this.page$.pipe(map(page => page.items));\r\n    this.totalCount$ = this.page$.pipe(map(page => page.totalCount));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.reloadItems();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loadingSubscription?.unsubscribe();\r\n  }\r\n\r\n  onPage(event: PageEvent): void {\r\n    this.pageIndex = event.pageIndex;\r\n    this.pageSize = event.pageSize;\r\n    this.reloadItems();\r\n  }\r\n\r\n  onAddProductToCart(product: Product): void {\r\n    this.addProductToCart.emit(product);\r\n  }\r\n\r\n  onViewProduct(product: Product): void {\r\n    this.catalogService.navigateToProductDetails(product.barcode);\r\n  }\r\n\r\n  private reloadItems() {\r\n    this.loadingProducts = true;\r\n    this.loadingSubscription?.unsubscribe();\r\n\r\n    this.loadingSubscription = this.productListApiService.fetchContents(this.list, this.pageIndex, this.pageSize).pipe(\r\n      tap(page => this.pageSource.next(page)),\r\n      finalize(() => { this.loadingProducts = false; })\r\n    ).subscribe();\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<h3>{{ list.name }}</h3>\r\n<app-store-products-lot-display\r\n  [loading]=\"loadingProducts\"\r\n  [products]=\"products$ | async\"\r\n  [totalCount]=\"totalCount$ | async\"\r\n  [pageIndex]=\"pageIndex\"\r\n  [pageSize]=\"pageSize\"\r\n  [showAddToCartButtons]=\"true\"\r\n  (page)=\"onPage($event)\"\r\n  (addProductToCart)=\"onAddProductToCart($event)\"\r\n  (viewProduct)=\"onViewProduct($event)\">\r\n</app-store-products-lot-display>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-store-location',\r\n  templateUrl: './store-location.component.html',\r\n  styleUrls: ['./store-location.component.css']\r\n})\r\nexport class StoreLocationComponent {\r\n\r\n  @Input() mapWidth: number = 600;\r\n  @Input() mapHeight: number = 450;\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<span i18n=\"Label inviting users to check the location map\">You can find us in:</span>\r\n<app-gmap\r\n  [width]=\"mapWidth\"\r\n  [height]=\"mapHeight\">\r\n</app-gmap>\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<!-- <h2 i18n=\"Title of page for the storefront\">Store Frontpage</h2> -->\r\n<app-centered-mat-spinner *ngIf=\"loading$ | async\">\r\n</app-centered-mat-spinner>\r\n<div class=\"top banners\">\r\n  <app-slideshow\r\n    [images]=\"storeCatalogTopBannerImages\">\r\n  </app-slideshow>\r\n</div>\r\n<div class=\"products\" [hidden]=\"loading$ | async\">\r\n  <app-store-product-list-contents-display\r\n    *ngFor=\"let list of (lists$ | async)\"\r\n    [list]=\"list\"\r\n    (addProductToCart)=\"onAddProductToCart($event)\">\r\n  </app-store-product-list-contents-display>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"bottom banners\">\r\n  <app-slideshow\r\n    [showSlideSelectors]=\"false\"\r\n    [showNextPreviousButtons]=\"false\"\r\n    [images]=\"storeCatalogBottomBannerImages\">\r\n  </app-slideshow>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"location\">\r\n  <app-store-location\r\n    [mapHeight]=\"200\">\r\n  </app-store-location>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { EMPTY, Observable, Subscription } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Product } from 'src/models/entities/Product';\r\nimport { ProductList } from 'src/models/entities/ProductList';\r\nimport { StoreProductDetailsDialogComponent } from '../../dialogs/product-details/store-product-details-dialog.component';\r\nimport { StoreProductDetailsDialogData } from '../../dialogs/product-details/StoreProductDetailsDialogData';\r\nimport { StoreCartService } from '../../store-cart.service';\r\nimport { StoreCatalogService } from './store-catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-store-catalog',\r\n  templateUrl: './store-catalog.component.html',\r\n  styleUrls: ['./store-catalog.component.css']\r\n})\r\nexport class StoreCatalogComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private dataLoadingSubscription: Subscription;\r\n  private detailsViewSub: Subscription;\r\n  private queryParamsSubscription: Subscription;\r\n\r\n  readonly storeCatalogTopBannerImages = environment.staticImages.topBanners;\r\n  readonly storeCatalogBottomBannerImages = environment.staticImages.bottomBanners;\r\n  loading$: Observable<boolean>;\r\n  lists$: Observable<ProductList[]>;\r\n\r\n  constructor(\r\n    private catalogService: StoreCatalogService,\r\n    private cartService: StoreCartService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dialogService: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.catalogService.loading$.pipe();\r\n    this.lists$ = this.catalogService.listsPage$.pipe(map(page => page.items));\r\n    this.dataLoadingSubscription = this.catalogService.reloadItems().subscribe();\r\n    this.queryParamsSubscription = this.route.queryParamMap.pipe(\r\n      switchMap(params => this.checkViewingProductParam(params))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.queryParamsSubscription?.unsubscribe();\r\n    this.dataLoadingSubscription?.unsubscribe();\r\n    this.detailsViewSub?.unsubscribe();\r\n  }\r\n\r\n  onAddProductToCart(p: Product) {\r\n    this.cartService.addProductToCart(p);\r\n  }\r\n  onViewProduct(p: Product) {\r\n    this.detailsViewSub?.unsubscribe();\r\n    this.detailsViewSub = this.catalogService.navigateToProductDetails(p.barcode).subscribe();\r\n  }\r\n\r\n  private checkViewingProductParam(params: ParamMap) {\r\n    return params.has('viewingProduct') ?\r\n      this.catalogService.fetchProductDetails(params.get('viewingProduct')).pipe(\r\n        switchMap(p => this.promptProductDetails(p)),\r\n        tap(() => this.router.navigate(\r\n          [],\r\n          {\r\n            relativeTo: this.route,\r\n            queryParams: {\r\n              viewingProduct: undefined\r\n            },\r\n            queryParamsHandling: 'merge'\r\n          }\r\n        ))\r\n      ) :\r\n      EMPTY;\r\n  }\r\n\r\n\r\n  private promptProductDetails(product: Product): Observable<any> {\r\n    const dialogData: StoreProductDetailsDialogData = { product };\r\n    return this.dialogService.open(\r\n      StoreProductDetailsDialogComponent,\r\n      {\r\n        width: '40rem',\r\n        data: dialogData\r\n      }\r\n    ).afterClosed();\r\n  }\r\n\r\n}\r\n","import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map, pluck, startWith } from 'rxjs/operators';\r\nimport { API_INJECTION_TOKENS } from 'src/app/api/api-injection-tokens';\r\nimport { IReceiptPublicApiService } from 'src/app/api/receipt-public-api.iservice';\r\nimport { Receipt } from 'src/models/Receipt';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StoreReceiptService {\r\n\r\n  private receiptSource = new BehaviorSubject<Receipt>(null);\r\n\r\n  receipt$ = this.receiptSource.asObservable();\r\n  loading$ = this.receipt$.pipe(map(v => !v), startWith(true));\r\n  details$ = this.receipt$.pipe(pluck('details'));\r\n  date$ = this.receipt$.pipe(pluck('date'));\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.receipt) private receiptApiService: IReceiptPublicApiService\r\n  ) { }\r\n\r\n  /**\r\n   * Request receipt metadata reading the transaction token from query parameters.\r\n   * If it fails or the token is falsy, redirects user away from receipt page.\r\n   */\r\n  fetchReceipt(token: string) {\r\n    return this.receiptApiService.fetchTransactionReceiptByToken(token);\r\n  }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<table mat-table [dataSource]=\"dataSource\">\r\n  <ng-container matColumnDef=\"product\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      <span i18n=\"product|Name of table header for name and code of product\">Product</span>\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let detail\">\r\n      <span class=\"name\">{{ detail.product.name }}</span><br/>\r\n      <span class=\"barcode\">{{ detail.product.barcode }}</span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"price\">\r\n    <th mat-header-cell *matHeaderCellDef class=\"center\">\r\n      <span i18n=\"Name of table header for price per product unit\">Price</span>\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let detail\" class=\"center\">\r\n      <span>{{ detail.unitValue | currency }}</span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"quantity\">\r\n    <th mat-header-cell *matHeaderCellDef class=\"center\">\r\n      <span i18n=\"Name of table header for product units in cart\">Units</span>\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let detail\" class=\"center\">\r\n      <span>{{ detail.units }}</span>\r\n    </td>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"total\">\r\n    <th mat-header-cell *matHeaderCellDef>\r\n      <span i18n=\"Name of table header for the value of product price x units in cart\">Subtotal</span>\r\n    </th>\r\n    <td mat-cell *matCellDef=\"let detail\" class=\"center\">\r\n      <span>{{ (detail.unitValue * detail.units) | currency }}</span>\r\n    </td>\r\n  </ng-container>\r\n\r\n  <tr mat-header-row *matHeaderRowDef=\"tableColumns\"></tr>\r\n  <tr mat-row *matRowDef=\"let row; columns: tableColumns;\"></tr>\r\n</table>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ReceiptDetail } from 'src/models/ReceiptDetail';\r\n\r\n@Component({\r\n  selector: 'app-store-receipt-details-table',\r\n  templateUrl: './store-receipt-details-table.component.html',\r\n  styleUrls: ['./store-receipt-details-table.component.css']\r\n})\r\nexport class StoreReceiptDetailsTableComponent {\r\n\r\n  dataSource = new MatTableDataSource<ReceiptDetail>();\r\n\r\n  @Input()\r\n  get details() { return this.dataSource.data; }\r\n  set details(data: ReceiptDetail[]) { this.dataSource.data = data; }\r\n\r\n  @Input() tableColumns: string[] = [ 'product', 'price', 'quantity', 'total' ];\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<mat-card>\r\n  <div class=\"icon-wrapper\" aria-hidden=\"true\">\r\n    <mat-icon>receipt_long</mat-icon>\r\n  </div>\r\n  <h2 mat-card-title>{{ transactionStatus }}</h2>\r\n  <p i18n=\"Label with transaction confirmation date\">Confirmed on {{ receipt.date | date:'short' }}</p>\r\n  <p i18n=\"Label with total count of items in transaction being {{ receipt.totalItems }}\">Total items: {{ receipt.totalItems }}</p>\r\n  <p *ngIf=\"receipt.transportValue\" i18n=\"Label with total price of transport being {{ receipt.transportValue }}\">Transport: {{ receipt.transportValue | currency:'CLP' }}</p>\r\n  <p *ngIf=\"receipt.taxValue\" i18n=\"Label with total price of taxes being {{ receipt.taxValue }}\">Taxes: {{ receipt.taxValue | currency:'CLP' }}</p>\r\n  <p i18n=\"Label with total price of transaction being {{ receipt.totalValue}}\">Total: {{ receipt.totalValue | currency:'CLP' }}</p>\r\n  <h3 i18n=\"Title of widget displaying products and details of transaction\">Details</h3>\r\n  <app-store-receipt-details-table [details]=\"receipt.details\">\r\n  </app-store-receipt-details-table>\r\n</mat-card>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, Input } from '@angular/core';\r\nimport { Receipt } from 'src/models/Receipt';\r\nimport { SELL_STATUS_LOCALIZED_MAP, SELL_STATUS_NAMES_MAP } from 'src/text/sell-status-names';\r\n\r\n@Component({\r\n  selector: 'app-store-receipt-card',\r\n  templateUrl: './store-receipt-card.component.html',\r\n  styleUrls: ['./store-receipt-card.component.css']\r\n})\r\nexport class StoreReceiptCardComponent {\r\n\r\n  @Input() receipt: Receipt | null;\r\n\r\n  // TODO use a more elegant approach\r\n  get transactionStatus() { return this.receipt?.status ? SELL_STATUS_LOCALIZED_MAP.get(this.receipt.status) : ''; }\r\n\r\n  constructor() { }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-centered-mat-spinner *ngIf=\"(loading$ | async); else loadedReceipt\">\r\n</app-centered-mat-spinner>\r\n<ng-template #loadedReceipt>\r\n  <app-store-receipt-card [receipt]=\"receipt$ | async\"></app-store-receipt-card>\r\n</ng-template>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription, ReplaySubject, BehaviorSubject, from } from 'rxjs';\r\nimport { take, switchMap, tap, catchError, finalize } from 'rxjs/operators';\r\nimport { Receipt } from 'src/models/Receipt';\r\nimport { StoreReceiptService } from './store-receipt.service';\r\n\r\n@Component({\r\n  selector: 'app-store-receipt',\r\n  templateUrl: './store-receipt.component.html',\r\n  styleUrls: ['./store-receipt.component.css']\r\n})\r\nexport class StoreReceiptComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private loadSubscription: Subscription;\r\n  private receiptSource = new ReplaySubject<Receipt>(1);\r\n  private loadingSource = new BehaviorSubject(true);\r\n  loading$ = this.loadingSource.asObservable();\r\n  receipt$ = this.receiptSource.asObservable();\r\n\r\n  constructor(\r\n    private service: StoreReceiptService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadReceipt();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loadSubscription?.unsubscribe();\r\n    this.receiptSource.complete();\r\n    this.loadingSource.complete();\r\n  }\r\n\r\n  private loadReceipt() {\r\n    this.loadSubscription = this.route.queryParamMap.pipe(\r\n      take(1),\r\n      switchMap(queryParams => {\r\n        const token = queryParams.get('token');\r\n        if (!token) {\r\n          return from(this.router.navigateByUrl('/'));\r\n        } else {\r\n          return this.service.fetchReceipt(token).pipe(\r\n            tap(receipt => this.receiptSource.next(receipt)),\r\n            finalize(() => this.loadingSource.next(false))\r\n          );\r\n        }\r\n      }),\r\n      catchError(() => from(this.router.navigateByUrl('/')))\r\n    ).subscribe();\r\n  }\r\n\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nexport class ProductSearchQuery {\r\n  nameLike?: string;\r\n  categoryCode?: string;\r\n  // tags?: string;\r\n  // brand?: string;\r\n  // brandLike?: string;\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { Params } from \"@angular/router\";\r\nimport { BehaviorSubject, ReplaySubject } from \"rxjs\";\r\nimport { finalize, ignoreElements, tap } from \"rxjs/operators\";\r\nimport { DataPage } from \"src/models/DataPage\";\r\nimport { Product } from \"src/models/entities/Product\";\r\nimport { ProductSearchQuery } from \"src/models/ProductSearchQuery\";\r\nimport { API_INJECTION_TOKENS } from \"../api/api-injection-tokens\";\r\nimport { ITransactionalEntityDataApiService } from \"../api/transactional-entity.data-api.iservice\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StoreSearchService {\r\n\r\n  private isLoadingSearchSource = new BehaviorSubject(false);\r\n  private currentPageSource = new ReplaySubject<DataPage<Product>>(1);\r\n  private searchQuery = new ProductSearchQuery();\r\n\r\n  currentPage$ = this.currentPageSource.asObservable();\r\n  isLoadingSearch$ = this.isLoadingSearchSource.asObservable();\r\n\r\n  pageIndex = 0;\r\n  pageSize = 8;\r\n  sortBy = 'name';\r\n  order = 'asc';\r\n\r\n  constructor(\r\n    @Inject(API_INJECTION_TOKENS.dataProducts) private productsApiService: ITransactionalEntityDataApiService<Product>\r\n  ) { }\r\n\r\n  updateSearchQuery(queryParams: Params) {\r\n    if (queryParams?.nameLike || queryParams) {\r\n      this.searchQuery.nameLike = queryParams.nameLike;\r\n    } else {\r\n      delete this.searchQuery.nameLike;\r\n    }\r\n    if (queryParams?.categoryCode) {\r\n      this.searchQuery.categoryCode = queryParams.categoryCode;\r\n    } else {\r\n      delete this.searchQuery.categoryCode;\r\n    }\r\n  }\r\n\r\n  paginate(event: PageEvent) {\r\n    this.pageIndex = event.pageIndex;\r\n    this.pageSize = event.pageSize;\r\n    return this.reload();\r\n  }\r\n\r\n  reload() {\r\n    this.isLoadingSearchSource.next(true);\r\n    return this.productsApiService.fetchPage(this.pageIndex, this.pageSize, this.sortBy, this.order, this.searchQuery).pipe(\r\n      tap(page => this.currentPageSource.next(page)),\r\n      ignoreElements(),\r\n      finalize(() => this.isLoadingSearchSource.next(false))\r\n    );\r\n  }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-centered-mat-spinner *ngIf=\"isLoadingSearch$ | async\">\r\n</app-centered-mat-spinner>\r\n\r\n<div class=\"container\" [hidden]=\"isLoadingSearch$ | async\">\r\n  <h3 i18n=\"Title for page on search results\">Search results</h3>\r\n  <ng-container *ngIf=\"(totalCount$ | async) === 0; else results\">\r\n    <div class=\"empty\">\r\n      <p i18n=\"Label to hint users that there are zero results present\">No products matched your search</p>\r\n      <mat-icon>sentiment_very_dissatisfied</mat-icon>\r\n    </div>\r\n  </ng-container>\r\n  <ng-template #results>\r\n    <mat-paginator\r\n      (page)=\"onPage($event)\"\r\n      [showFirstLastButtons]=\"true\"\r\n      [pageSizeOptions]=\"[8, 20, 40, 80]\"\r\n      [length]=\"totalCount$ | async\">\r\n    </mat-paginator>\r\n    <div class=\"contents\">\r\n      <app-product-card\r\n        *ngFor=\"let product of (searchResults$ | async)\"\r\n        [showAddToCartButton]=\"true\"\r\n        [product]=\"product\"\r\n        (addToCart)=\"onAddProductToCart(product)\"\r\n        (view)=\"onViewProduct(product)\">\r\n      </app-product-card>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { Product } from 'src/models/entities/Product';\r\nimport { StoreCartService } from '../../store-cart.service';\r\nimport { StoreSearchService } from '../../store-search.service';\r\nimport { StoreCatalogService } from '../catalog/store-catalog.service';\r\n\r\n@Component({\r\n  selector: 'app-store-search',\r\n  templateUrl: './store-search.component.html',\r\n  styleUrls: ['./store-search.component.css']\r\n})\r\nexport class StoreSearchComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private reloadSub: Subscription;\r\n  private queryParamsSub: Subscription;\r\n\r\n  isLoadingSearch$: Observable<boolean>;\r\n  searchResults$: Observable<Product[]>;\r\n  totalCount$: Observable<number>;\r\n\r\n  constructor(\r\n    private searchService: StoreSearchService,\r\n    private cartService: StoreCartService,\r\n    private catalogService: StoreCatalogService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingSearch$ = this.searchService.isLoadingSearch$.pipe();\r\n    this.searchResults$ = this.searchService.currentPage$.pipe(\r\n      map(page => (page.items as Product[]))\r\n    );\r\n    this.totalCount$ = this.searchService.currentPage$.pipe(\r\n      map(page => page.totalCount)\r\n    );\r\n    this.queryParamsSub = this.route.queryParams.pipe(\r\n      tap(params => this.searchService.updateSearchQuery(params))\r\n    ).subscribe();\r\n    this.reloadSub = this.searchService.reload().subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.queryParamsSub.unsubscribe();\r\n    this.reloadSub?.unsubscribe();\r\n  }\r\n\r\n  onPage(event: PageEvent): void {\r\n    this.reloadSub?.unsubscribe();\r\n    this.reloadSub = this.searchService.paginate(event).subscribe();\r\n  }\r\n\r\n  onAddProductToCart(product: Product): void {\r\n    this.cartService.addProductToCart(product);\r\n  }\r\n\r\n  onViewProduct(product: Product): void {\r\n    this.catalogService.navigateToProductDetails(product.barcode);\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<a mat-button routerLink=\"/store\"\r\n  aria-label=\"Go to storefront\"\r\n  i18n-aria-label=\"Label for link to navigate to storefront\">\r\n  <mat-icon>storefront</mat-icon>\r\n</a>\r\n<ng-container *ngIf=\"cartHasItems$ | async; else emptyCart\">\r\n  <a mat-button [routerLink]=\"['/store', 'cart']\"\r\n    class=\"full cart\"\r\n    aria-label=\"Go to cart review\"\r\n    i18n-aria-label=\"Label for link to navigate to cart\">\r\n    <mat-icon [matBadge]=\"cartItemCount$ | async\">shopping_cart</mat-icon>\r\n  </a>\r\n</ng-container>\r\n<ng-template #emptyCart>\r\n  <a mat-button disabled\r\n    class=\"empty cart\">\r\n    <mat-icon  class=\"material-icons-outlined\">shopping_cart</mat-icon>\r\n  </a>\r\n</ng-template>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { StoreCartService } from 'src/app/store/store-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-store-header-navigation',\r\n  templateUrl: './store-header-navigation.component.html',\r\n  styleUrls: ['./store-header-navigation.component.css']\r\n})\r\nexport class StoreHeaderNavigationComponent\r\n  implements OnInit {\r\n\r\n  cartHasItems$: Observable<boolean>;\r\n  cartItemCount$: Observable<number>;\r\n\r\n  constructor(\r\n    private cartService: StoreCartService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cartHasItems$ = this.cartService.cartDetails$.pipe(\r\n      map(array => array.length > 0)\r\n    );\r\n    this.cartItemCount$ = this.cartService.cartItemCount$.pipe();\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<fieldset [formGroup]=\"formGroup\">\r\n  <mat-form-field appearance=\"fill\" (click)=\"onTouched()\">\r\n    <mat-label i18n=\"Label to hint users to type in a search term\">What are you looking for?</mat-label>\r\n    <input matInput type=\"text\" formControlName=\"nameLike\" />\r\n    <mat-icon matPrefix>search</mat-icon>\r\n    <button type=\"reset\" *ngIf=\"nameLike.value || categoryCode.value\"\r\n      i18n-aria-label=\"Label for action button to clear search terms\"\r\n      aria-label=\"Clear search terms\"\r\n      matSuffix mat-icon-button\r\n      (click)=\"onClickResetForm()\">\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n    <button type=\"button\" class=\"open-category-picker\"\r\n      i18n-aria-label=\"Label for action button to pick a category from the tree\"\r\n      aria-label=\"Select category\"\r\n      matSuffix mat-icon-button\r\n      (click)=\"onClickOpenCategoryPicker()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <mat-hint i18n=\"Label to hint users that search is triggered upon use of the search field or clicking a button to select a category\">Just type something, or click on the right 'burger' button, and we will match your search terms</mat-hint>\r\n  </mat-form-field>\r\n  <input type=\"hidden\" formControlName=\"categoryCode\" />\r\n</fieldset>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { from, Subscription } from 'rxjs';\r\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\r\nimport { ProductCategoryPickerDialogComponent } from 'src/app/shared/dialogs/product-category-picker/product-category-picker-dialog.component';\r\nimport { ProductCategory } from 'src/models/entities/ProductCategory';\r\nimport { ProductSearchQuery } from 'src/models/ProductSearchQuery';\r\nimport { StoreSearchService } from '../../../store-search.service';\r\n\r\n@Component({\r\n  selector: 'app-store-header-search-form',\r\n  templateUrl: './store-header-search-form.component.html',\r\n  styleUrls: ['./store-header-search-form.component.css']\r\n})\r\nexport class StoreHeaderSearchFormComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private categoryPickerSubscription: Subscription;\r\n  private productSearchChanges: Subscription;\r\n  private queryParamsSub: Subscription;\r\n\r\n  readonly searchFiltersDebounceMs = 400;\r\n\r\n  formGroup: FormGroup;\r\n  get nameLike() { return this.formGroup.get('nameLike') as FormControl; }\r\n  get categoryCode() { return this.formGroup.get('categoryCode') as FormControl; }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private dialogService: MatDialog,\r\n    private searchService: StoreSearchService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = this.formBuilder.group({\r\n      nameLike: [''],\r\n      categoryCode: [null]\r\n    });\r\n    this.productSearchChanges = this.formGroup.valueChanges.pipe(\r\n      debounceTime(this.searchFiltersDebounceMs),\r\n      tap(() => { this.searchService.pageIndex = 0; }),\r\n      switchMap(value => from(this.router.navigate(\r\n        [],\r\n        {\r\n          relativeTo: this.route,\r\n          queryParams: value,\r\n          queryParamsHandling: 'merge'\r\n        }\r\n      )))\r\n    ).subscribe();\r\n    this.queryParamsSub = this.route.queryParams.pipe(\r\n      tap(params => this.searchService.updateSearchQuery(params)),\r\n      switchMap(() => this.searchService.reload())\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.productSearchChanges.unsubscribe();\r\n    this.queryParamsSub.unsubscribe();\r\n    this.categoryPickerSubscription?.unsubscribe();\r\n  }\r\n\r\n  onTouched(): void {\r\n    if (this.route.firstChild.routeConfig.path !== 'search') {\r\n      this.router.navigateByUrl('/store/search');\r\n    }\r\n  }\r\n\r\n  onClickOpenCategoryPicker(): void {\r\n    this.categoryPickerSubscription?.unsubscribe();\r\n    this.categoryPickerSubscription = this.dialogService.open(\r\n      ProductCategoryPickerDialogComponent,\r\n      {\r\n        width: '24rem'\r\n      }\r\n    ).afterClosed().pipe(\r\n      tap((next: ProductCategory | null) => {\r\n        if (next?.code) {\r\n          this.categoryCode.setValue(next.code);\r\n          this.categoryCode.markAsDirty();\r\n        } else if (next === null) {\r\n          this.categoryCode.reset(null);\r\n        }\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  onClickResetForm(): void {\r\n    this.formGroup.reset({\r\n      nameLike: '',\r\n      categoryCode: null\r\n    });\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<mat-menu #headerMenu>\r\n  <span mat-menu-item disabled>{{ userName$ | async }}</span>\r\n  <button mat-menu-item type=\"button\"\r\n    *ngIf=\"canNavigateManagement$ | async\"\r\n    class=\"navigate-management\"\r\n    [routerLink]=\"['/management']\">\r\n    <mat-icon>tune</mat-icon>\r\n    <span i18n=\"Label for link button to navigate to management dashboard\">Management</span>\r\n  </button>\r\n  <button mat-menu-item type=\"button\"\r\n    class=\"edit-profile\"\r\n    (click)=\"onClickEditProfile()\">\r\n    <mat-icon>edit</mat-icon>\r\n    <span i18n=\"edit profile|Label for action button to prompt profile edit\">Edit profile</span>\r\n  </button>\r\n  <button mat-menu-item type=\"button\"\r\n    class=\"logout\"\r\n    (click)=\"onClickLogout()\">\r\n    <mat-icon>exit_to_app</mat-icon>\r\n    <span i18n=\"log out|Label for action button to log out\">Log out</span>\r\n  </button>\r\n</mat-menu>\r\n<button mat-button type=\"button\"\r\n  class=\"open-menu\"\r\n  aria-label=\"Open user menu\"\r\n  i18n-aria-label=\"open user menu|Label for action button to open user menu\"\r\n  [matMenuTriggerFor]=\"headerMenu\">\r\n  <mat-icon>person</mat-icon>\r\n</button>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { filter, map, switchMap, take, tap } from 'rxjs/operators';\r\nimport { ProfileService } from 'src/app/profile.service';\r\nimport { SessionService } from 'src/app/session.service';\r\nimport { EditProfileFormDialogComponent } from 'src/app/shared/dialogs/edit-profile-form/edit-profile-form-dialog.component';\r\nimport { SharedDialogService } from 'src/app/shared/dialogs/shared-dialog.service';\r\nimport { COMMON_DISMISS_BUTTON_LABEL } from 'src/text/messages';\r\n\r\n@Component({\r\n  selector: 'app-store-header-menu',\r\n  templateUrl: './store-header-menu.component.html',\r\n  styleUrls: ['./store-header-menu.component.css']\r\n})\r\nexport class StoreHeaderMenuComponent\r\n  implements OnInit, OnDestroy {\r\n\r\n  private logoutSubscription: Subscription;\r\n\r\n  userName$: Observable<string>;\r\n  canNavigateManagement$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private sessionService: SessionService,\r\n    private profileService: ProfileService,\r\n    private snackBarService: MatSnackBar,\r\n    private dialogService: MatDialog,\r\n    private sharedDialogService: SharedDialogService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userName$ = this.profileService.watchUserName();\r\n    this.canNavigateManagement$ = this.sessionService.authorizedAccess$.pipe(\r\n      map(access => (access?.routes?.length > 0))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.logoutSubscription?.unsubscribe();\r\n  }\r\n\r\n  onClickEditProfile(): void {\r\n    this.dialogService.open(\r\n      EditProfileFormDialogComponent,\r\n      {\r\n        width: '60rem'\r\n      }\r\n    );\r\n  }\r\n\r\n  onClickLogout(): void {\r\n    this.logoutSubscription?.unsubscribe();\r\n    this.logoutSubscription = this.sessionService.userHasActiveSession$.pipe(\r\n      take(1),\r\n      filter(hasActiveSession => hasActiveSession),\r\n      switchMap(() => this.confirmLogout()),\r\n      filter(didConfirm => didConfirm),\r\n      tap(() => {\r\n        this.sessionService.closeCurrentSession();\r\n        const message = $localize`:Message after logging out:You have logged out`;\r\n        this.snackBarService.open(message, COMMON_DISMISS_BUTTON_LABEL);\r\n      })\r\n    ).subscribe();\r\n  }\r\n\r\n  private confirmLogout(): Observable<boolean> {\r\n    return this.sharedDialogService.requestConfirmation({\r\n      title: $localize`:Title of dialog prompt for logging out:Log out?`,\r\n      message: $localize`:Label to hint user that any undergoing process may be lost when logging out:Any unsaved data may be lost`\r\n    });\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { StoreLoginFormDialogComponent } from 'src/app/store/dialogs/login-form/store-login-form-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-store-header-login-button',\r\n  templateUrl: './store-header-login-button.component.html',\r\n  styleUrls: ['./store-header-login-button.component.css']\r\n})\r\nexport class StoreHeaderLoginButtonComponent {\r\n\r\n  constructor(\r\n    private dialogService: MatDialog\r\n  ) { }\r\n\r\n  onClickLogIn(): void {\r\n    this.dialogService.open(\r\n      StoreLoginFormDialogComponent,\r\n      {\r\n        width: '24rem'\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<button mat-button type=\"button\"\r\n  aria-label=\"Log in\"\r\n  i18n-aria-label=\"log in|Label for action button to prompt a login\"\r\n  (click)=\"onClickLogIn()\">\r\n  <mat-icon>person_outline</mat-icon>\r\n</button>\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-header-brand></app-header-brand>\r\n<app-store-header-navigation></app-store-header-navigation>\r\n<app-store-header-search-form></app-store-header-search-form>\r\n<ng-container *ngIf=\"(isLoggedIn$ | async); else notLoggedIn\">\r\n  <app-store-header-menu></app-store-header-menu>\r\n</ng-container>\r\n<ng-template #notLoggedIn>\r\n  <app-store-header-login-button></app-store-header-login-button>\r\n</ng-template>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { SessionService } from 'src/app/session.service';\r\n\r\n@Component({\r\n  selector: 'app-store-header',\r\n  templateUrl: './store-header.component.html',\r\n  styleUrls: ['./store-header.component.css']\r\n})\r\nexport class StoreHeaderComponent\r\n  implements OnInit {\r\n\r\n  readonly middleLabel = $localize`:Title of application:Online store`;\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private sessionService: SessionService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn$ = this.sessionService.userHasActiveSession$.pipe();\r\n  }\r\n\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<div class=\"upper\">\r\n  <div class=\"whatsapp sales contact\"\r\n    *ngIf=\"whatsappNumber\">\r\n    <strong i18n=\"Label for section referring to a contact WhatsApp number\">WhatsApp</strong><br/>\r\n    <a href=\"https://wa.me/{{ whatsappUrlSafeNumber }}\">\r\n      <img src=\"https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/whatsapp.svg\" class=\"whatsapp icon\"\r\n        i18n-alt=\"Label for WhatsApp icon\"\r\n        alt=\"WhatsApp\" aria-hidden=\"true\" />\r\n      <span>{{ whatsappNumber }}</span>\r\n    </a>\r\n  </div>\r\n  <div class=\"phone general contact\"\r\n    *ngIf=\"contactInfo.phone && contactInfo.urlSafePhone\">\r\n    <strong i18n=\"Label for section referring to a contact phone number\">Phone</strong><br/>\r\n    <a href=\"tel://{{ contactInfo.urlSafePhone }}\">\r\n      <img src=\"https://unpkg.com/@fortawesome/fontawesome-free/svgs/solid/phone.svg\" class=\"phone icon\"\r\n        i18n-alt=\"Label for phone number icon\"\r\n        alt=\"Contact phone number\" aria-hidden=\"true\" />\r\n      <span>{{ contactInfo.phone  }}</span>\r\n    </a>\r\n  </div>\r\n  <div class=\"email general contact\"\r\n    *ngIf=\"contactInfo.email\">\r\n    <strong i18n=\"Label for section referring to a contact e-mail address\">E-Mail</strong><br/>\r\n    <a href=\"mailto:{{ contactInfo.email }}\">\r\n      <img src=\"https://unpkg.com/@fortawesome/fontawesome-free/svgs/solid/envelope.svg\" class=\"envelope icon\"\r\n        i18n-alt=\"Label for envelope (email) icon\"\r\n        alt=\"Contact e-mail\" aria-hidden=\"true\" />\r\n      <span>{{ contactInfo.email }}</span>\r\n    </a>\r\n  </div>\r\n</div>\r\n<div class=\"middle\">\r\n  <div class=\"social\">\r\n    <strong i18n=\"Label that invites users to check social media profiles\">Follow us on social media</strong><br/>\r\n    <ul>\r\n      <li *ngIf=\"contactInfo.instagram\">\r\n        <a href=\"https://www.instagram.com/{{ contactInfo.instagram }}\">\r\n          <img src=\"https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/instagram.svg\" class=\"instagram icon\"\r\n            i18n-alt=\"Label for Instagram icon\"\r\n            alt=\"Instagram\" aria-hidden=\"false\" />\r\n        </a>\r\n      </li>\r\n      <li *ngIf=\"contactInfo.facebook\">\r\n        <a href=\"https://www.facebook.com/{{ contactInfo.facebook }}\">\r\n          <img src=\"https://cdn.jsdelivr.net/npm/simple-icons@v6/icons/facebook.svg\" class=\"facebook icon\"\r\n            i18n-alt=\"Label for Facebook icon\"\r\n            alt=\"Facebook\" aria-hidden=\"false\" />\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n<mat-divider></mat-divider>\r\n<div class=\"lower\">\r\n  <p *ngFor=\"let text of footerParagraphs\">{{ text }}</p>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-store-footer',\r\n  templateUrl: './store-footer.component.html',\r\n  styleUrls: ['./store-footer.component.css']\r\n})\r\nexport class StoreFooterComponent {\r\n\r\n  readonly footerParagraphs = environment.labels.footerParagraphs;\r\n  readonly whatsappUrlSafeNumber = `${environment.whatsapp.areaCode}${environment.whatsapp.urlSafePhone}`;\r\n  readonly whatsappNumber = `${environment.whatsapp.areaCode} ${environment.whatsapp.phone}`;\r\n  readonly contactInfo = environment.contactInfo;\r\n\r\n  constructor() { }\r\n}\r\n","<!--\r\n  Copyright (c) 2022 The Trebol eCommerce Project\r\n\r\n  This software is released under the MIT License.\r\n  https://opensource.org/licenses/MIT\r\n-->\r\n\r\n<app-whatsapp-button size=\"2.5rem\" padding=\"0.75rem\"\r\n  *ngIf=\"whatsapp.enabled\"\r\n  [areaCode]=\"whatsapp.areaCode\"\r\n  [phone]=\"whatsapp.urlSafePhone\">\r\n</app-whatsapp-button>\r\n<app-store-header></app-store-header>\r\n<div class=\"content\">\r\n  <router-outlet></router-outlet>\r\n  <app-store-footer></app-store-footer>\r\n</div>\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { map, filter, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { SessionService } from '../session.service';\r\nimport { StoreCartService } from './store-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: './store.component.html',\r\n  styleUrls: [ './store.component.css' ]\r\n})\r\nexport class StoreComponent\r\n  implements OnDestroy {\r\n\r\n  private readonly restrictedUrl = '/store/cart';\r\n  private readonly exitUrl = '/store';\r\n  private restrictingConditionsSub: Subscription;\r\n\r\n  readonly whatsapp = environment.whatsapp;\r\n\r\n  constructor(\r\n    private cartService: StoreCartService,\r\n    private sessionService: SessionService,\r\n    private router: Router\r\n  ) {\r\n    this.restrictingConditionsSub = this.watchRestrictingConditions().subscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.restrictingConditionsSub.unsubscribe();\r\n  }\r\n\r\n  private watchRestrictingConditions() {\r\n    return merge(\r\n      this.cartService.cartDetails$.pipe(\r\n        map(details => (details.length === 0))\r\n      ),\r\n      this.sessionService.userHasActiveSession$.pipe(\r\n        map(hasActiveSession => !hasActiveSession)\r\n      )\r\n    ).pipe(\r\n      filter(restrictingCondition => restrictingCondition && this.router.routerState?.snapshot?.url === this.restrictedUrl),\r\n      tap(() => this.router.navigateByUrl(this.exitUrl))\r\n    );\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { StoreCartReviewComponent } from './routes/cart-review/store-cart-review.component';\r\nimport { StoreCartReviewGuard } from './routes/cart-review/store-cart-review.guard';\r\nimport { StoreCatalogComponent } from './routes/catalog/store-catalog.component';\r\nimport { StoreReceiptComponent } from './routes/receipt/store-receipt.component';\r\nimport { StoreSearchComponent } from './routes/search/store-search.component';\r\nimport { StoreComponent } from './store.component';\r\n\r\nexport const STORE_CHILD_ROUTES: Routes = [\r\n  {\r\n    path: 'catalog',\r\n    component: StoreCatalogComponent\r\n  },\r\n  {\r\n    path: 'cart',\r\n    component: StoreCartReviewComponent,\r\n    canActivate: [StoreCartReviewGuard]\r\n  },\r\n  {\r\n    path: 'search',\r\n    component: StoreSearchComponent\r\n  },\r\n  {\r\n    path: 'receipt',\r\n    component: StoreReceiptComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      {\r\n        path: '', component: StoreComponent,\r\n        children: [\r\n          ...STORE_CHILD_ROUTES,\r\n          {\r\n            path: '**', pathMatch: 'prefix', redirectTo: 'catalog'\r\n          }\r\n        ]\r\n      }\r\n    ])\r\n  ]\r\n})\r\nexport class StoreRoutingModule { }\r\n","/*\r\n * Copyright (c) 2022 The Trebol eCommerce Project\r\n *\r\n * This software is released under the MIT License.\r\n * https://opensource.org/licenses/MIT\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { StoreCheckoutButtonComponent } from './components/checkout-button/store-checkout-button.component';\r\nimport { StoreCheckoutConfirmationButtonComponent } from './components/checkout-confirmation-button/store-checkout-confirmation-button.component';\r\nimport { StoreCheckoutConfirmationComponent } from './components/checkout-confirmation/store-checkout-confirmation.component';\r\nimport { StoreCheckoutRequestInformationCardComponent } from './components/checkout-request-information-card/store-checkout-request-information-card.component';\r\nimport { StoreFooterComponent } from './components/footer/store-footer.component';\r\nimport { StoreHeaderLoginButtonComponent } from './components/header/login-button/store-header-login-button.component';\r\nimport { StoreHeaderMenuComponent } from './components/header/menu/store-header-menu.component';\r\nimport { StoreHeaderNavigationComponent } from './components/header/navigation/store-header-navigation.component';\r\nimport { StoreHeaderSearchFormComponent } from './components/header/search-form/store-header-search-form.component';\r\nimport { StoreHeaderComponent } from './components/header/store-header.component';\r\nimport { StoreLocationComponent } from './components/location/store-location.component';\r\nimport { StoreProductListContentsDisplayComponent } from './components/product-list-contents-display/store-product-list-contents-display.component';\r\nimport { ProductsLotDisplayComponent } from './components/products-display/store-products-lot-display.component';\r\nimport { StoreReceiptCardComponent } from './components/receipt-card/store-receipt-card.component';\r\nimport { StoreReceiptDetailsTableComponent } from './components/receipt-details-table/store-receipt-details-table.component';\r\nimport { StoreCompanyDetailsDialogComponent } from './dialogs/about-commerce-details/store-about-commerce-details-dialog.component';\r\nimport { StoreGuestLoginFormDialogComponent } from './dialogs/guest-login-form/store-guest-login-form-dialog.component';\r\nimport { StoreGuestPromptDialogComponent } from './dialogs/guest-prompt/store-guest-prompt-dialog.component';\r\nimport { StoreLoginFormDialogComponent } from './dialogs/login-form/store-login-form-dialog.component';\r\nimport { StoreProductDetailsDialogComponent } from './dialogs/product-details/store-product-details-dialog.component';\r\nimport { StoreRegistrationFormDialogComponent } from './dialogs/registration-form/store-registration-form-dialog.component';\r\nimport { StoreBillingDetailsFormComponent } from './forms/billing-details/store-billing-details-form.component';\r\nimport { StoreCheckoutRequestFormComponent } from './forms/checkout-request/store-checkout-request-form.component';\r\nimport { StoreShippingDetailsFormComponent } from './forms/shipping-details/store-shipping-details-form.component';\r\nimport { StoreCartReviewComponent } from './routes/cart-review/store-cart-review.component';\r\nimport { StoreCartReviewGuard } from './routes/cart-review/store-cart-review.guard';\r\nimport { StoreCatalogComponent } from './routes/catalog/store-catalog.component';\r\nimport { StoreCatalogService } from './routes/catalog/store-catalog.service';\r\nimport { StoreReceiptComponent } from './routes/receipt/store-receipt.component';\r\nimport { StoreSearchComponent } from './routes/search/store-search.component';\r\nimport { StoreMaterialModule } from './store-material.module';\r\nimport { StoreRoutingModule } from './store-routing.module';\r\nimport { StoreComponent } from './store.component';\r\n\r\n\r\nconst SNACKBAR_DEFAULTS = {\r\n  duration: 5000\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StoreComponent,\r\n    StoreHeaderComponent,\r\n    StoreFooterComponent,\r\n    StoreBillingDetailsFormComponent,\r\n    StoreCatalogComponent,\r\n    StoreCartReviewComponent,\r\n    StoreCheckoutButtonComponent,\r\n    StoreCheckoutConfirmationComponent,\r\n    StoreCheckoutConfirmationButtonComponent,\r\n    StoreCheckoutRequestInformationCardComponent,\r\n    StoreCheckoutRequestFormComponent,\r\n    StoreLocationComponent,\r\n    StoreReceiptComponent,\r\n    StoreReceiptCardComponent,\r\n    StoreReceiptDetailsTableComponent,\r\n    StoreLoginFormDialogComponent,\r\n    StoreGuestPromptDialogComponent,\r\n    StoreGuestLoginFormDialogComponent,\r\n    StoreRegistrationFormDialogComponent,\r\n    StoreProductDetailsDialogComponent,\r\n    ProductsLotDisplayComponent,\r\n    StoreProductListContentsDisplayComponent,\r\n    StoreShippingDetailsFormComponent,\r\n    StoreCompanyDetailsDialogComponent,\r\n    StoreHeaderNavigationComponent,\r\n    StoreHeaderMenuComponent,\r\n    StoreHeaderLoginButtonComponent,\r\n    StoreHeaderSearchFormComponent,\r\n    StoreSearchComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    StoreMaterialModule,\r\n    StoreRoutingModule\r\n  ],\r\n  providers: [\r\n    {provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: SNACKBAR_DEFAULTS},\r\n    StoreCartReviewGuard,\r\n    StoreCatalogService\r\n  ]\r\n})\r\nexport class StoreModule { }\r\n"],"sourceRoot":"webpack:///","file":"src_app_store_store_module_ts.b6925f7153f630dc.js"}