{"version":3,"mappings":"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","names":["__globalThis","globalThis","__window","window","__self","self","WorkerGlobalScope","_global","global","$localize","messageParts","expressions","translate","translation","message","stripBlock","raw","i","length","messagePart","rawMessagePart","charAt","substring","cooked","cookedIndex","rawIndex","Error","findEndOfBlock","performance","name","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","constructor","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","performanceMeasure","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","resolve","nativeThen","then","nativeScheduleMicroTask","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","zoneSymbol","isWindowExists","internalWindow","propertyDesc","writable","set","isWebWorker","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","creationTrace","scheduleResolveOrReject","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","AggregateError","static","ZONE_AWARE_PROMISE_TO_STRING","values","Symbol","iterator","promises","finished","errors","res","rej","isThenable","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","wrapped","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalCallback","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","ue","prepareEventNames","constructorName","targetSource","S","unshift","PREPEND_EVENT_LISTENER","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","getOwnPropertyNames","startsWith","map","eventNames","getOnEventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","I","legacyPatch","clear","patchTimer","blockingMethods","s","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchFilteredProperties","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","storedTask","XHR_TASK","sendNative","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","placeholderCallback","findPendingTask","patchXHR","geolocation","fnNames","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler"],"sources":["./node_modules/@angular/localize/fesm2015/init.mjs","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v13.3.5\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst __globalThis = typeof globalThis !== 'undefined' && globalThis;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n// Always use __globalThis if available; this is the spec-defined global variable across all\n// environments.\n// Then fallback to __global first; in Node tests both __global and __window may be defined.\nconst _global = __globalThis || __global || __window || __self;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n-common-prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @globalApi\n * @publicApi\n */\nconst $localize = function (messageParts, ...expressions) {\n    if ($localize.translate) {\n        // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n        const translation = $localize.translate(messageParts, expressions);\n        messageParts = translation[0];\n        expressions = translation[1];\n    }\n    let message = stripBlock(messageParts[0], messageParts.raw[0]);\n    for (let i = 1; i < messageParts.length; i++) {\n        message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n    }\n    return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n    return rawMessagePart.charAt(0) === BLOCK_MARKER ?\n        messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) :\n        messagePart;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n    /***********************************************************************************************\n     * This function is repeated in `src/utils/messages.ts` and the two should be kept in sync.\n     * The reason is that this file is marked as having side-effects, and if we import `messages.ts`\n     * into it, the whole of `src/utils` will be included in this bundle and none of the functions\n     * will be tree shaken.\n     ***********************************************************************************************/\n    for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n        if (raw[rawIndex] === '\\\\') {\n            rawIndex++;\n        }\n        else if (cooked[cookedIndex] === BLOCK_MARKER) {\n            return cookedIndex;\n        }\n    }\n    throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attach $localize to the global context, as a side-effect of this module.\n_global.$localize = $localize;\n\nexport { $localize };\n","'use strict';\n/**\n * @license Angular v14.0.0-next.5\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"sourceRoot":"webpack:///","file":"polyfills.5ccadfa36e428377.js"}